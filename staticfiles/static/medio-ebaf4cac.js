import{j as u}from"./@react-pdf/renderer-d806818e.js";import{r as o}from"./react-a84639bd.js";import{b as m}from"./@tanstack/react-query-devtools-5e1ae0d5.js";import{a as k}from"./axios-28bc18a3.js";const p="http://127.0.0.1:8000/",a=k.create({baseURL:p,headers:{"Content-type":"application/json"}});a.interceptors.request.use(async e=>{const t=localStorage.getItem("token");return t&&(e.headers.Authorization=`JWT ${t}`),e});const x=()=>m({mutationKey:["signin"],mutationFn:async({email:e,password:t})=>(await a.post("auth/jwt/create/",{email:e,password:t})).data,onSuccess:async e=>{await localStorage.setItem("token",e.access),await localStorage.setItem("refreshToken",e.refresh)}}),w=async()=>{let e=!1;return await a.post("auth/jwt/refresh/",{refresh:localStorage.getItem("refreshToken")}).then(async t=>{console.log("refresh token antes de guardar",localStorage.getItem("refreshToken")),await localStorage.setItem("token",t.data.access),await console.log("refresh token despues de guardar",localStorage.getItem("refreshToken")),e=!0}).catch(t=>{console.log(t,"error aqui estoy en useRefreshTokenMutation"),localStorage.removeItem("token"),localStorage.removeItem("refreshToken"),e=!1}),e},y=async()=>{let e=!1;return await a.post("auth/jwt/verify/",{token:localStorage.getItem("token")}).then(()=>{e=!0}).catch(async t=>{console.log(t,"error aqui estoy en useVerfyTokenMutation");const s=await w();console.log(s,"successrefresh aqui estoy en useVerfyTokenMutation"),s&&(e=!0)}),e},l=o.createContext({isTokenValid:!1,firstView:0,firstViewCount:()=>{},validateToken:()=>{},logout:()=>{}});function j({children:e}){const[t,s]=o.useState(!1),[f,n]=o.useState(!0),[r,g]=o.useState(0),h=()=>{g(r+1)},d=async()=>{s(!1)},i=async()=>{if(!await localStorage.getItem("token")){console.log("no hay token"),s(!1),n(!1);return}const c=await y();if(console.log(c,"successToken====================================="),c){console.log("token valido"),s(!0),n(!1);return}n(!1)};return o.useEffect(()=>{i()},[]),u.jsx(l.Provider,{value:{isTokenValid:t,firstView:r,validateToken:i,logout:d,firstViewCount:h},children:f?u.jsx("div",{children:"loading..."}):e})}function A(){const e=o.useContext(l);if(!e)throw new Error("useAuth must be used within an AuthProvider");return e}const C="/static/static/nosotros-f0edd203.jpg",b="/static/static/servicios-b9ae097a.png",M="/static/static/projects-d98326dc.png",R="/static/static/topo-01ca573f.png",q="/static/static/ingenieria-0e1c6d5d.png",E="/static/static/medio-df076d7d.png";export{p as A,b as a,M as b,R as c,q as d,E as e,a as f,x as g,j as h,C as i,A as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVkaW8tZWJhZjRjYWMuanMiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGlDbGllbnQudHN4IiwiLi4vLi4vc3JjL2FwaS91c2VyLnRzeCIsIi4uLy4uL3NyYy9hdXRoL0F1dGhQcm92aWRlci50c3giLCIuLi8uLi9zcmMvYXNzZXRzL2ltZy9iYW5uZXIvbm9zb3Ryb3MuanBnIiwiLi4vLi4vc3JjL2Fzc2V0cy9pbWcvYmFubmVyL3NlcnZpY2lvcy5wbmciLCIuLi8uLi9zcmMvYXNzZXRzL2ltZy9iYW5uZXIvcHJvamVjdHMucG5nIiwiLi4vLi4vc3JjL2Fzc2V0cy9pbWcvYmFubmVyL3RvcG8ucG5nIiwiLi4vLi4vc3JjL2Fzc2V0cy9pbWcvYmFubmVyL2luZ2VuaWVyaWEucG5nIiwiLi4vLi4vc3JjL2Fzc2V0cy9pbWcvYmFubmVyL21lZGlvLnBuZyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXG5leHBvcnQgY29uc3QgQVBJVVJMID0gJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMC8nXG4vLyBleHBvcnQgY29uc3QgQVBJVVJMID1cImh0dHBzOi8vbWFnbmFpbmdlbmllcmlheXRvcG9ncmFmaWEuY29tXCJcblxuXG5jb25zdCBhcGlDbGllbnQgPSBheGlvcy5jcmVhdGUoe1xuICBiYXNlVVJMOkFQSVVSTCAsXG4gIGhlYWRlcnM6IHtcbiAgICAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICB9LFxufSlcblxuXG5hcGlDbGllbnQuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKFxuICBhc3luYyAoY29uZmlnKSA9PiB7XG4gICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKVxuICAgIGlmICh0b2tlbikge1xuXG4gICAgICBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gYEpXVCAke3Rva2VufWBcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZ1xuICB9XG4pXG5leHBvcnQgZGVmYXVsdCBhcGlDbGllbnQiLCJpbXBvcnQgeyB1c2VNdXRhdGlvbiB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSdcbmltcG9ydCBhcGlDbGllbnQgZnJvbSAnLi4vYXBpQ2xpZW50J1xuaW1wb3J0IHsgQXV0aFJlc3BvbnNlLFVzZXIscmVmcmVzaFJlc3BvbnNlIH0gZnJvbSAnLi4vdHlwZXMvdHlwZXMnXG5cblxuXG5cbmV4cG9ydCBjb25zdCBmZXRjaFVzZXIgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCd0b2tlbkF1dG9yaXphaW9uIGFxdWkgZXN0b3kgZW4gZmV0Y2hVc2VyJyxhcGlDbGllbnQuZ2V0VXJpKCkpO1xuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyh0b2tlbiwgJ3Rva2VuIGFxdWkgZXN0b3kgZW4gZmV0Y2hVc2VyJyk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpQ2xpZW50LmdldDxVc2VyPignL2F1dGgvdXNlcnMvbWUvJylcbiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICBcbn1cbmV4cG9ydCBjb25zdCB1c2VTaWduaW5NdXRhdGlvbiA9ICgpID0+XG4gIHVzZU11dGF0aW9uKHtcbiAgICBtdXRhdGlvbktleTogWydzaWduaW4nXSxcbiAgICBtdXRhdGlvbkZuOiBhc3luYyAoe1xuICAgICAgZW1haWwsXG4gICAgICBwYXNzd29yZCxcbiAgICB9OiB7XG4gICAgICBlbWFpbDogc3RyaW5nXG4gICAgICBwYXNzd29yZDogc3RyaW5nXG4gICAgfSkgPT5cbiAgICAgIChcbiAgICAgICAgYXdhaXQgYXBpQ2xpZW50LnBvc3Q8QXV0aFJlc3BvbnNlPihgYXV0aC9qd3QvY3JlYXRlL2AsIHtcbiAgICAgICAgICBlbWFpbCxcbiAgICAgICAgICBwYXNzd29yZCxcbiAgICAgICAgfSlcbiAgICAgICkuZGF0YSxcbiAgICAgIG9uU3VjY2Vzczphc3luYyAoZGF0YSkgPT4geyAgICAgICAgXG4gICAgICAgIGF3YWl0IGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIGRhdGEuYWNjZXNzKVxuICAgICAgICBhd2FpdCBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncmVmcmVzaFRva2VuJywgZGF0YS5yZWZyZXNoKVxuICAgICAgfSxcbiAgICAgIFxuICB9KVxuXG5cbmV4cG9ydCBjb25zdCB1c2VSZWZyZXNoVG9rZW4gPSBhc3luYyAoKSA9PntcbiAgbGV0IHN1Y2Nlc3NyZWZyZXNoID0gZmFsc2U7XG4gIGF3YWl0IGFwaUNsaWVudC5wb3N0PHJlZnJlc2hSZXNwb25zZT4oYGF1dGgvand0L3JlZnJlc2gvYCwge1xuICAgIHJlZnJlc2g6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdyZWZyZXNoVG9rZW4nKSxcbiAgfSkudGhlbihhc3luYyAocmVzcG9uc2UpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcInJlZnJlc2ggdG9rZW4gYW50ZXMgZGUgZ3VhcmRhclwiLCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncmVmcmVzaFRva2VuJykpO1xuICAgIGF3YWl0IGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHJlc3BvbnNlLmRhdGEuYWNjZXNzKTtcbiAgICBhd2FpdCBjb25zb2xlLmxvZyhcInJlZnJlc2ggdG9rZW4gZGVzcHVlcyBkZSBndWFyZGFyXCIsIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdyZWZyZXNoVG9rZW4nKSk7XG4gICAgc3VjY2Vzc3JlZnJlc2ggPSB0cnVlO1xuICB9XG4gICkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyb3IsICdlcnJvciBhcXVpIGVzdG95IGVuIHVzZVJlZnJlc2hUb2tlbk11dGF0aW9uJyk7XG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJyk7XG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3JlZnJlc2hUb2tlbicpO1xuICAgIHN1Y2Nlc3NyZWZyZXNoID0gZmFsc2U7XG4gIH0pO1xuICByZXR1cm4gIHN1Y2Nlc3NyZWZyZXNoO1xufVxuXG5leHBvcnQgY29uc3QgdXNlVmVyZnlUb2tlbiAgPSBhc3luYyAoKSA9PntcbiAgbGV0IHN1Y2Nlc3NWZXJmeVRva2VuID0gZmFsc2U7XG4gIGF3YWl0IGFwaUNsaWVudC5wb3N0KGBhdXRoL2p3dC92ZXJpZnkvYCwge1xuICAgIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSxcbiAgfSkudGhlbigoKSA9PiB7XG4gICAgc3VjY2Vzc1ZlcmZ5VG9rZW4gPSB0cnVlO1xuICB9XG4gICkuY2F0Y2goYXN5bmMgKGVycm9yKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyb3IsICdlcnJvciBhcXVpIGVzdG95IGVuIHVzZVZlcmZ5VG9rZW5NdXRhdGlvbicpO1xuICAgIGNvbnN0IHN1Y2Nlc3NyZWZyZXNoID0gYXdhaXQgdXNlUmVmcmVzaFRva2VuKCk7XG4gICAgY29uc29sZS5sb2coc3VjY2Vzc3JlZnJlc2gsICdzdWNjZXNzcmVmcmVzaCBhcXVpIGVzdG95IGVuIHVzZVZlcmZ5VG9rZW5NdXRhdGlvbicpO1xuICAgIGlmKHN1Y2Nlc3NyZWZyZXNoKXtcbiAgICAgIHN1Y2Nlc3NWZXJmeVRva2VuID0gdHJ1ZTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gc3VjY2Vzc1ZlcmZ5VG9rZW47XG59XG5cbmV4cG9ydCBjb25zdCB1c2VMb2dvdXRNdXRhdGlvbiA9ICgpID0+XG4gIHVzZU11dGF0aW9uKHtcbiAgICBtdXRhdGlvbktleTogWydsb2dvdXQnXSxcbiAgICBtdXRhdGlvbkZuOiBhc3luYyAoKSA9PiB7XG4gICAgICBhd2FpdCBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKVxuICAgICAgYXdhaXQgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3JlZnJlc2hUb2tlbicpXG4gICAgICBjb25zb2xlLmxvZygnbG9nb3V0TXV0YXRpb24nKTtcbiAgICB9LFxuICB9KVxuIiwiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7ICB1c2VWZXJmeVRva2VufSBmcm9tIFwiLi4vYXBpL3VzZXJcIjtcclxuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbi8vIENyZWFyIGVsIGNvbnRleHRvIGRlbCBBdXRoUHJvdmlkZXJcclxuY29uc3QgQXV0aENvbnRleHQgPSBjcmVhdGVDb250ZXh0KHtcclxuICAgaXNUb2tlblZhbGlkOiBmYWxzZSxcclxuICAgZmlyc3RWaWV3OiAwLFxyXG4gICBmaXJzdFZpZXdDb3VudDogKCkgPT4ge30sXHJcbiAgIHZhbGlkYXRlVG9rZW46ICgpID0+IHt9LFxyXG4gICBsb2dvdXQ6ICgpID0+IHt9LFxyXG59KTtcclxuXHJcbi8vIENyZWFyIGVsIEF1dGhQcm92aWRlclxyXG5leHBvcnQgZnVuY3Rpb24gQXV0aFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcclxuICAgIGNvbnN0IFtpc1Rva2VuVmFsaWQsIHNldElzVG9rZW5WYWxpZF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XHJcbiAgICBjb25zdCBbZmlyc3RWaWV3LCBzZXRGaXJzdFZpZXddID0gdXNlU3RhdGUoMCk7XHJcblxyXG4gICAgY29uc3QgZmlyc3RWaWV3Q291bnQgPSAoKSA9PiB7XHJcbiAgICAgICAgc2V0Rmlyc3RWaWV3KGZpcnN0VmlldyArIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGxvZ291dCA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBzZXRJc1Rva2VuVmFsaWQoZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgY29uc3QgdmFsaWRhdGVUb2tlbiA9IGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHRva2VucyA9IGF3YWl0IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgaWYoIXRva2Vucyl7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ25vIGhheSB0b2tlbicpO1xyXG4gICAgICAgIHNldElzVG9rZW5WYWxpZChmYWxzZSk7XHJcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBzdWNjZXNzVG9rZW4gPSBhd2FpdCB1c2VWZXJmeVRva2VuKCk7XHJcbiAgICBjb25zb2xlLmxvZyhzdWNjZXNzVG9rZW4sICdzdWNjZXNzVG9rZW49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XHJcbiAgICBcclxuICAgIGlmKHN1Y2Nlc3NUb2tlbil7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3Rva2VuIHZhbGlkbycpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHNldElzVG9rZW5WYWxpZCh0cnVlKTtcclxuICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcclxuICAgIH1cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgdmFsaWRhdGVUb2tlbigpO1xyXG4gICAgfSwgW10pO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPEF1dGhDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7ICBpc1Rva2VuVmFsaWQsIGZpcnN0VmlldywgdmFsaWRhdGVUb2tlbiwgbG9nb3V0LGZpcnN0Vmlld0NvdW50fX0+XHJcbiAgICAgICAgICAgIHtpc0xvYWRpbmcgPyA8ZGl2PmxvYWRpbmcuLi48L2Rpdj4gOmNoaWxkcmVufVxyXG4gICAgICAgIDwvQXV0aENvbnRleHQuUHJvdmlkZXI+XHJcbiAgICApO1xyXG59XHJcbi8vIEhvb2sgcGVyc29uYWxpemFkbyBwYXJhIGFjY2VkZXIgYWwgY29udGV4dG8gZGVsIEF1dGhQcm92aWRlclxyXG5leHBvcnQgZnVuY3Rpb24gdXNlQXV0aCgpIHtcclxuICAgIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KEF1dGhDb250ZXh0KTtcclxuICAgIGlmICghY29udGV4dCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInVzZUF1dGggbXVzdCBiZSB1c2VkIHdpdGhpbiBhbiBBdXRoUHJvdmlkZXJcIik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY29udGV4dDtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBcIl9fVklURV9BU1NFVF9fYzAzZTRhNmZfX1wiIiwiZXhwb3J0IGRlZmF1bHQgXCJfX1ZJVEVfQVNTRVRfXzJlNTRkZDVhX19cIiIsImV4cG9ydCBkZWZhdWx0IFwiX19WSVRFX0FTU0VUX180NjAxMTM5Zl9fXCIiLCJleHBvcnQgZGVmYXVsdCBcIl9fVklURV9BU1NFVF9fZjYyN2U3Y2FfX1wiIiwiZXhwb3J0IGRlZmF1bHQgXCJfX1ZJVEVfQVNTRVRfX2EzYzQzMzhiX19cIiIsImV4cG9ydCBkZWZhdWx0IFwiX19WSVRFX0FTU0VUX184YjllNTU4YV9fXCIiXSwibmFtZXMiOlsiQVBJVVJMIiwiYXBpQ2xpZW50IiwiYXhpb3MiLCJjb25maWciLCJ0b2tlbiIsInVzZVNpZ25pbk11dGF0aW9uIiwidXNlTXV0YXRpb24iLCJlbWFpbCIsInBhc3N3b3JkIiwiZGF0YSIsInVzZVJlZnJlc2hUb2tlbiIsInN1Y2Nlc3NyZWZyZXNoIiwicmVzcG9uc2UiLCJlcnJvciIsInVzZVZlcmZ5VG9rZW4iLCJzdWNjZXNzVmVyZnlUb2tlbiIsIkF1dGhDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIkF1dGhQcm92aWRlciIsImNoaWxkcmVuIiwiaXNUb2tlblZhbGlkIiwic2V0SXNUb2tlblZhbGlkIiwidXNlU3RhdGUiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJmaXJzdFZpZXciLCJzZXRGaXJzdFZpZXciLCJmaXJzdFZpZXdDb3VudCIsImxvZ291dCIsInZhbGlkYXRlVG9rZW4iLCJzdWNjZXNzVG9rZW4iLCJ1c2VFZmZlY3QiLCJ1c2VBdXRoIiwiY29udGV4dCIsInVzZUNvbnRleHQiLCJpbWFnZW4kMSIsImltYWdlblNlcnZpY2lvcyIsImltYWdlbiIsImltYWdlblRvcG9ncmFmaWEiLCJpbWFnZW5JbmdlbmllcmlhIiwiaW1hZ2VuTWVkaW9BbWJpZW50ZSJdLCJtYXBwaW5ncyI6InVNQUNPLE1BQU1BLEVBQVMseUJBSWhCQyxFQUFZQyxFQUFNLE9BQU8sQ0FDN0IsUUFBUUYsRUFDUixRQUFTLENBQ1AsZUFBZ0Isa0JBQ2xCLENBQ0YsQ0FBQyxFQUdEQyxFQUFVLGFBQWEsUUFBUSxJQUM3QixNQUFPRSxHQUFXLENBQ1YsTUFBQUMsRUFBUSxhQUFhLFFBQVEsT0FBTyxFQUMxQyxPQUFJQSxJQUVGRCxFQUFPLFFBQVEsY0FBbUIsT0FBT0MsQ0FBSyxJQUV6Q0QsQ0FDVCxDQUNGLEVDRmEsTUFBQUUsRUFBb0IsSUFDL0JDLEVBQVksQ0FDVixZQUFhLENBQUMsUUFBUSxFQUN0QixXQUFZLE1BQU8sQ0FDakIsTUFBQUMsRUFDQSxTQUFBQyxDQU1FLEtBQUEsTUFBTVAsRUFBVSxLQUFtQixtQkFBb0IsQ0FDckQsTUFBQU0sRUFDQSxTQUFBQyxDQUNELENBQUEsR0FDRCxLQUNGLFVBQVUsTUFBT0MsR0FBUyxDQUN4QixNQUFNLGFBQWEsUUFBUSxRQUFTQSxFQUFLLE1BQU0sRUFDL0MsTUFBTSxhQUFhLFFBQVEsZUFBZ0JBLEVBQUssT0FBTyxDQUN6RCxDQUVKLENBQUMsRUFHVUMsRUFBa0IsU0FBVyxDQUN4QyxJQUFJQyxFQUFpQixHQUNmLGFBQUFWLEVBQVUsS0FBc0Isb0JBQXFCLENBQ3pELFFBQVMsYUFBYSxRQUFRLGNBQWMsQ0FDN0MsQ0FBQSxFQUFFLEtBQUssTUFBT1csR0FBYSxDQUMxQixRQUFRLElBQUksaUNBQWtDLGFBQWEsUUFBUSxjQUFjLENBQUMsRUFDbEYsTUFB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
