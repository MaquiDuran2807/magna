import{j as e}from"./@react-pdf/renderer-d806818e.js";import{r as d}from"./react-a84639bd.js";import{u as _}from"./@tanstack/react-query-devtools-5e1ae0d5.js";import{L as g}from"./react-router-dom-10f375c6.js";import{u as A}from"./main-d3681136.js";import{m as x}from"./framer-motion-31cb7f15.js";import"./react-dom-47c417a6.js";import"./swiper-dad05047.js";import"./medio-ebaf4cac.js";import"./axios-28bc18a3.js";import"./react-pdf-3633ae72.js";import"./react-floating-whatsapp-31f2a923.js";import"./react-icons-293a2bbc.js";const C=({type:c,actualPage:m,imagenes:n})=>{const[u,o]=d.useState([]),[y,f]=d.useState([]),[p,v]=d.useState([]),[i,h]=d.useState(),{data:a}=_({queryKey:["projects"],staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchOnMount:!1,refetchOnReconnect:!1,refetchInterval:1e3*60*30});if(!a)return null;d.useEffect(()=>{if(c===0){const r=Array.isArray(a.results)?a.results.map(t=>t.tipo).filter((t,l,N)=>N.findIndex(b=>b.id===t.id)===l):[];o(a.results),f(n),v([{id:0,name:"Todos"},...r]);return}const s=a.results.filter(r=>r.tipo.id===c).filter(r=>r.id!==m);o(s),f(n)},[c,m,n]);const j=s=>{if(s===0){o(a.results),h(void 0);return}if(!s)return;const r=p.filter(l=>l.id===s)[0];if(!r)return;const t=Array.isArray(a.results)?a.results.filter(l=>l.tipo.id===r.id):[];h(r),o(t)};return e.jsx("div",{children:e.jsxs("div",{className:"container",children:[e.jsx("div",{className:"row",children:c===0?p?p.map(s=>e.jsx(x.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.5},className:"col-12 col-sm-6 col-lg-3 col-md-4",children:e.jsx("button",{className:"boton-1 ",onClick:()=>j(s.id),children:s.name})},s.id)):null:e.jsx(x.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.5},className:"col-4 col-lg-3",children:e.jsx("button",{className:"boton-1",onClick:()=>j(i==null?void 0:i.id),children:i==null?void 0:i.name})},i==null?void 0:i.id)}),e.jsx("div",{className:"row",children:Array.isArray(u)&&u.map(s=>{let r="no hay imagen";try{r=y.filter(t=>t.proyecto===s.id)[0].imagen}catch(t){console.error(t)}return e.jsx(x.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0,x:-100},transition:{duration:.6},className:"col-md-6 col-lg-4 col-12 col-xl-3",children:e.jsx("div",{children:e.jsx("div",{className:"card-project",children:e.jsxs("div",{className:"card-body card-body-projects",children:[r?e.jsx("img",{src:r,alt:"",className:"img-fluid card-img"}):e.jsx("p",{children:"No hay imagen"}),e.jsx("div",{className:"content-1 ",children:e.jsxs("div",{children:[e.jsx("h5",{className:"card-title text-center",children:s.nombre}),e.jsx("p",{className:"card-text text-center",children:`${s.descripcion.slice(0,100)} ...`})]})}),e.jsx(g,{to:`/projects/${s.id}`,className:"boton-1 text-center end-boton",children:"Ver m√°s"})]})})})},s.id)})})]})})};function F({type:c,actualPage:m,imagenes:n}){const{isVisible:u,ref:o}=A("100px");return e.jsx("div",{id:"LazyServices",ref:o,children:u?e.jsx(C,{type:c,actualPage:m,imagenes:n}):null})}export{F as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
