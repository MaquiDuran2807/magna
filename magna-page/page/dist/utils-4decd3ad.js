var T=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var c=(e,t,n)=>(T(e,t,"read from private field"),n?n.call(e):t.get(e)),E=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},d=(e,t,n,s)=>(T(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);import{r as P}from"./jsx-runtime-329ae681.js";var z=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(e){return this.listeners.add(e),this.onSubscribe(),()=>{this.listeners.delete(e),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}},R=typeof window>"u"||"Deno"in window;function se(){}function re(e,t){return typeof e=="function"?e(t):e}function ie(e){return typeof e=="number"&&e>=0&&e!==1/0}function ue(e,t){return Math.max(e+(t||0)-Date.now(),0)}function oe(e,t){const{type:n="all",exact:s,fetchStatus:r,predicate:a,queryKey:h,stale:l}=e;if(h){if(s){if(t.queryHash!==G(h,t.options))return!1}else if(!x(t.queryKey,h))return!1}if(n!=="all"){const y=t.isActive();if(n==="active"&&!y||n==="inactive"&&y)return!1}return!(typeof l=="boolean"&&t.isStale()!==l||typeof r<"u"&&r!==t.state.fetchStatus||a&&!a(t))}function ae(e,t){const{exact:n,status:s,predicate:r,mutationKey:a}=e;if(a){if(!t.options.mutationKey)return!1;if(n){if(K(t.options.mutationKey)!==K(a))return!1}else if(!x(t.options.mutationKey,a))return!1}return!(s&&t.state.status!==s||r&&!r(t))}function G(e,t){return((t==null?void 0:t.queryKeyHashFn)||K)(e)}function K(e){return JSON.stringify(e,(t,n)=>Q(n)?Object.keys(n).sort().reduce((s,r)=>(s[r]=n[r],s),{}):n)}function x(e,t){return e===t?!0:typeof e!=typeof t?!1:e&&t&&typeof e=="object"&&typeof t=="object"?!Object.keys(t).some(n=>!x(e[n],t[n])):!1}function B(e,t){if(e===t)return e;const n=D(e)&&D(t);if(n||Q(e)&&Q(t)){const s=n?e:Object.keys(e),r=s.length,a=n?t:Object.keys(t),h=a.length,l=n?[]:{};let y=0;for(let b=0;b<h;b++){const f=n?b:a[b];!n&&e[f]===void 0&&t[f]===void 0&&s.includes(f)?(l[f]=void 0,y++):(l[f]=B(e[f],t[f]),l[f]===e[f]&&e[f]!==void 0&&y++)}return r===h&&y===r?e:l}return t}function ce(e,t){if(e&&!t||t&&!e)return!1;for(const n in e)if(e[n]!==t[n])return!1;return!0}function D(e){return Array.isArray(e)&&e.length===Object.keys(e).length}function Q(e){if(!I(e))return!1;const t=e.constructor;if(typeof t>"u")return!0;const n=t.prototype;return!(!I(n)||!n.hasOwnProperty("isPrototypeOf"))}function I(e){return Object.prototype.toString.call(e)==="[object Object]"}function W(e){return new Promise(t=>{setTimeout(t,e)})}function le(e,t,n){return typeof n.structuralSharing=="function"?n.structuralSharing(e,t):n.structuralSharing!==!1?B(e,t):t}function fe(e,t,n=0){const s=[...e,t];return n&&s.length>n?s.slice(1):s}function he(e,t,n=0){const s=[t,...e];return n&&s.length>n?s.slice(0,-1):s}var S,p,j,U,X=(U=class extends z{constructor(){super();E(this,S,void 0);E(this,p,void 0);E(this,j,void 0);d(this,j,t=>{if(!R&&window.addEventListener){const n=()=>t();return window.addEventListener("visibilitychange",n,!1),()=>{window.removeEventListener("visibilitychange",n)}}})}onSubscribe(){c(this,p)||this.setEventListener(c(this,j))}onUnsubscribe(){var t;this.hasListeners()||((t=c(this,p))==null||t.call(this),d(this,p,void 0))}setEventListener(t){var n;d(this,j,t),(n=c(this,p))==null||n.call(this),d(this,p,t(s=>{typeof s=="boolean"?this.setFocused(s):this.onFocus()}))}setFocused(t){c(this,S)!==t&&(d(this,S,t),this.onFocus())}onFocus(){this.listeners.forEach(t=>{t()})}isFocused(){var t;return typeof c(this,S)=="boolean"?c(this,S):((t=globalThis.document)==null?void 0:t.visibilityState)!=="hidden"}},S=new WeakMap,p=new WeakMap,j=new WeakMap,U),Y=new X,L,w,C,A,Z=(A=class extends z{constructor(){super();E(this,L,!0);E(this,w,void 0);E(this,C,void 0);d(this,C,t=>{if(!R&&window.addEventListener){const n=()=>t(!0),s=()=>t(!1);return window.addEventListener("online",n,!1),window.addEventListener("offline",s,!1),()=>{window.removeEventListener("online",n),window.removeEventListener("offline",s)}}})}onSubscribe(){c(this,w)||this.setEventListener(c(this,C))}onUnsubscribe(){var t;this.hasListeners()||((t=c(this,w))==null||t.call(this),d(this,w,void 0))}setEventListener(t){var n;d(this,C,t),(n=c(this,w))==null||n.call(this),d(this,w,t(this.setOnline.bind(this)))}setOnline(t){c(this,L)!==t&&(d(this,L,t),this.listeners.forEach(s=>{s(t)}))}isOnline(){return c(this,L)}},L=new WeakMap,w=new WeakMap,C=new WeakMap,A),q=new Z;function $(e){return Math.min(1e3*2**e,3e4)}function g(e){return(e??"online")==="online"?q.isOnline():!0}var H=class{constructor(e){this.revert=e==null?void 0:e.revert,this.silent=e==null?void 0:e.silent}};function de(e){return e instanceof H}function ye(e){let t=!1,n=0,s=!1,r,a,h;const l=new Promise((o,u)=>{a=o,h=u}),y=o=>{var u;s||(v(new H(o)),(u=e.abort)==null||u.call(e))},b=()=>{t=!0},f=()=>{t=!1},F=()=>!Y.isFocused()||e.networkMode!=="always"&&!q.isOnline(),i=o=>{var u;s||(s=!0,(u=e.onSuccess)==null||u.call(e,o),r==null||r(),a(o))},v=o=>{var u;s||(s=!0,(u=e.onError)==null||u.call(e,o),r==null||r(),h(o))},N=()=>new Promise(o=>{var u;r=m=>{const O=s||!F();return O&&o(m),O},(u=e.onPause)==null||u.call(e)}).then(()=>{var o;r=void 0,s||(o=e.onContinue)==null||o.call(e)}),M=()=>{if(s)return;let o;try{o=e.fn()}catch(u){o=Promise.reject(u)}Promise.resolve(o).then(i).catch(u=>{var k;if(s)return;const m=e.retry??(R?0:3),O=e.retryDelay??$,J=typeof O=="function"?O(n,u):O,_=m===!0||typeof m=="number"&&n<m||typeof m=="function"&&m(n,u);if(t||!_){v(u);return}n++,(k=e.onFail)==null||k.call(e,n,u),W(J).then(()=>{if(F())return N()}).then(()=>{t?v(u):M()})})};return g(e.networkMode)?M():N().then(M),{promise:l,cancel:y,continue:()=>(r==null?void 0:r())?l:Promise.resolve(),cancelRetry:b,continueRetry:f}}function ee(){let e=[],t=0,n=i=>{i()},s=i=>{i()},r=i=>setTimeout(i,0);const a=i=>{r=i},h=i=>{let v;t++;try{v=i()}finally{t--,t||b()}return v},l=i=>{t?e.push(i):r(()=>{n(i)})},y=i=>(...v)=>{l(()=>{i(...v)})},b=()=>{const i=e;e=[],i.length&&r(()=>{s(()=>{i.forEach(v=>{n(v)})})})};return{batch:h,batchCalls:y,schedule:l,setNotifyFunction:i=>{n=i},setBatchNotifyFunction:i=>{s=i},setScheduler:a}}var ve=ee(),V=P.createContext(void 0),be=e=>{const t=P.useContext(V);if(e)return e;if(!t)throw new Error("No QueryClient set, use QueryClientProvider to set one");return t},pe=({client:e,children:t})=>(P.useEffect(()=>(e.mount(),()=>{e.unmount()}),[e]),P.createElement(V.Provider,{value:e},t));function we(e,t){return typeof e=="function"?e(...t):!!e}export{pe as Q,z as S,R as a,ve as b,ye as c,de as d,g as e,ae as f,he as g,G as h,ie as i,fe as j,Y as k,re as l,oe as m,se as n,q as o,K as p,x as q,le as r,ce as s,ue as t,be as u,we as v};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
