import{u as a}from"./useQuery-303ce1b9.js";import{a as t}from"./apiClient-4214bebe.js";const u=async()=>{try{return(await t.get("equipos/")).data}catch(e){console.log(e);return}},l=async()=>{try{const e=await t.get("servicios/servicios-and-subservicios/");return console.log(e.data,"aqui estoy en fetchServices"),console.log(e.data,"aqui estoy en fetchServices"),e.data}catch(e){console.log(e);return}},y=async()=>{try{return(await t.get("proyectos/")).data}catch(e){console.log(e);return}},g=async()=>{try{return(await t.get("proyectos/images/")).data}catch(e){console.log(e);return}},p=async()=>{try{return(await t.get("servicios/brochure/")).data}catch(e){console.log(e);return}},d=()=>{const{data:e,error:r,isLoading:s}=a({queryKey:["services"],queryFn:l,staleTime:18e5,refetchOnWindowFocus:!1,refetchInterval:18e5});return e==null||e.map(o=>{const c=new Image;c.src=o.imagen,console.log(c.src,"cargada")}),{services:e,errorServices:r,isLoadingServices:s}},m=()=>{const{data:e,error:r,isError:s,refetch:o}=a({queryKey:["workers"],queryFn:u,staleTime:18e5,refetchOnWindowFocus:!1,refetchInterval:18e5});return console.log("aqui estoy en workers"),{workers:e,errorWorkers:r,isErrorWorkers:s,refetchWorkers:o}},j=()=>{const{data:e,error:r,isError:s,refetch:o}=a({queryKey:["projects"],queryFn:y,staleTime:18e5,refetchOnWindowFocus:!1,refetchInterval:18e5});console.log("aqui estoy en projects");const{error:c,isError:n,data:i}=a({queryKey:["projectsImages"],queryFn:g,staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchInterval:1e3*60*30});return{projects:e,errorProjects:r,isErrorProjects:s,refetchProjects:o,projectImages:i,errorProjectsImages:c,isErrorProjectsImages:n}};export{j as a,m as b,p as f,d as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SW5mb1BhZ2UtZTE0MzY5MDQuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9hcGkvcGFnZXNJbmZvLnRzeCIsIi4uL3NyYy9ob29rcy9nZXRJbmZvUGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwaUNsaWVudCBmcm9tIFwiLi4vYXBpQ2xpZW50XCI7XG5pbXBvcnQgeyBCcm9jaHVyZSwgRXF1aXBvc0FuZFRlY2gsICBTZXJ2aWNpbzIgfSBmcm9tIFwiLi4vdHlwZXMvdHlwZXNcIjtcbmltcG9ydCB7IFByb3llY3Rvc01hZ25hLFByb3llY3RJbWFnZXNNYWduYSAgfSBmcm9tIFwiLi4vdHlwZXMvcHJvamVjdHNcIjtcblxuXG5leHBvcnQgY29uc3QgZmV0Y2hXb3JrZXJzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpQ2xpZW50LmdldDxFcXVpcG9zQW5kVGVjaD4oJ2VxdWlwb3MvJylcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIHJldHVyblxuICAgIH1cbn1cblxuXG5leHBvcnQgY29uc3QgZmV0Y2hTZXJ2aWNlczEgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlDbGllbnQuZ2V0PFNlcnZpY2lvMltdPignc2VydmljaW9zL3NlcnZpY2lvcy1hbmQtc3Vic2VydmljaW9zLycpXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEsICdhcXVpIGVzdG95IGVuIGZldGNoU2VydmljZXMnKTtcbiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSwgJ2FxdWkgZXN0b3kgZW4gZmV0Y2hTZXJ2aWNlcycpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIHJldHVyblxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGZldGNoUHJvamVjdHMgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlDbGllbnQuZ2V0PFByb3llY3Rvc01hZ25hPigncHJveWVjdG9zLycpXG4gICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICByZXR1cm5cbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBmZXRjaFByb2plY3RzSW1hZ2VzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpQ2xpZW50LmdldDxQcm95ZWN0SW1hZ2VzTWFnbmFbXT4oJ3Byb3llY3Rvcy9pbWFnZXMvJylcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIHJldHVyblxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGZldGNoQnJvY2h1cmUgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlDbGllbnQuZ2V0PEJyb2NodXJlW10+KCdzZXJ2aWNpb3MvYnJvY2h1cmUvJylcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgIHJldHVyblxuICAgIH1cbn1cblxuXG5cbiIsImltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcbmltcG9ydCB7IGZldGNoUHJvamVjdHMsIGZldGNoUHJvamVjdHNJbWFnZXMsIGZldGNoU2VydmljZXMxLCBmZXRjaFdvcmtlcnMgfSBmcm9tICcuLi9hcGkvcGFnZXNJbmZvJztcblxuZXhwb3J0IGNvbnN0IHVzZUdldFNlcnZpY2VzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogc2VydmljZXMsIGVycm9yOiBlcnJvclNlcnZpY2VzLCBpc0xvYWRpbmc6IGlzTG9hZGluZ1NlcnZpY2VzIH0gPSB1c2VRdWVyeSh7XG4gICAgICAgIHF1ZXJ5S2V5OiBbJ3NlcnZpY2VzJ10sXG4gICAgICAgIHF1ZXJ5Rm46IGZldGNoU2VydmljZXMxLFxuICAgICAgICBzdGFsZVRpbWU6IDEwMDAgKiA2MCAqIDMwLFxuICAgICAgICByZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UsXG4gICAgICAgIHJlZmV0Y2hJbnRlcnZhbDogMTAwMCAqIDYwICogMzAsXG4gICAgfSk7XG4gICAgIHNlcnZpY2VzPy5tYXAoKHNlcnZpY2UpID0+IHtcbiAgICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgaW1hZ2Uuc3JjID0gc2VydmljZS5pbWFnZW47XG4gICAgICAgIGNvbnNvbGUubG9nKGltYWdlLnNyYywgJ2NhcmdhZGEnKTtcbiAgICB9XG4gICAgKTtcbiAgICByZXR1cm4geyBzZXJ2aWNlcywgZXJyb3JTZXJ2aWNlcywgaXNMb2FkaW5nU2VydmljZXMgfTtcbn1cblxuXG5cbmNvbnN0IHVzZUdldFdvcmplcnMgPSAoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICBkYXRhOiB3b3JrZXJzLFxuICAgICAgICBlcnJvcjogZXJyb3JXb3JrZXJzLFxuICAgICAgICBpc0Vycm9yOiBpc0Vycm9yV29ya2VycyxcbiAgICAgICAgcmVmZXRjaDogcmVmZXRjaFdvcmtlcnMsXG4gICAgfSA9IHVzZVF1ZXJ5KFxuICAgICAgICB7cXVlcnlLZXk6Wyd3b3JrZXJzJ10sIHF1ZXJ5Rm46IGZldGNoV29ya2VycyxzdGFsZVRpbWU6IDEwMDAqNjAqMzAscmVmZXRjaE9uV2luZG93Rm9jdXM6IGZhbHNlLHJlZmV0Y2hJbnRlcnZhbDogMTAwMCo2MCozMCx9XG4gICAgICAgICk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdhcXVpIGVzdG95IGVuIHdvcmtlcnMnKTtcbiAgICByZXR1cm4geyB3b3JrZXJzLCBlcnJvcldvcmtlcnMsIGlzRXJyb3JXb3JrZXJzLCByZWZldGNoV29ya2Vyc307XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VHZXRXb3JqZXJzO1xuXG4vLyAgdXNlR2V0UHJvamVjdHMudHN4XG5cbmV4cG9ydCBjb25zdCB1c2VHZXRQcm9qZWN0cyA9ICgpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICAgIGRhdGE6IHByb2plY3RzLFxuICAgICAgICBlcnJvcjogZXJyb3JQcm9qZWN0cyxcbiAgICAgICAgaXNFcnJvcjogaXNFcnJvclByb2plY3RzLFxuICAgICAgICByZWZldGNoOiByZWZldGNoUHJvamVjdHMsXG4gICAgfSA9IHVzZVF1ZXJ5KFxuICAgICAgICB7cXVlcnlLZXk6Wydwcm9qZWN0cyddLCBxdWVyeUZuOiBmZXRjaFByb2plY3RzLHN0YWxlVGltZTogMTAwMCo2MCozMCxyZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UscmVmZXRjaEludGVydmFsOiAxMDAwKjYwKjMwLH1cbiAgICAgICAgKTtcbiAgICAgICAgY29uc29sZS5sb2coJ2FxdWkgZXN0b3kgZW4gcHJvamVjdHMnKTtcbiAgICAgICAgY29uc3R7XG4gICAgICAgICAgICBlcnJvcjogZXJyb3JQcm9qZWN0c0ltYWdlcyxcbiAgICAgICAgICAgIGlzRXJyb3I6IGlzRXJyb3JQcm9qZWN0c0ltYWdlcyxcbiAgICAgICAgICAgIGRhdGE6IHByb2plY3RJbWFnZXMsXG4gICAgICAgIH09dXNlUXVlcnkoXG4gICAgICAgICAgICB7cXVlcnlLZXk6Wydwcm9qZWN0c0ltYWdlcyddLCBxdWVyeUZuOiBmZXRjaFByb2plY3RzSW1hZ2VzLHN0YWxlVGltZTogMTAwMCo2MCozMCxyZWZldGNoT25XaW5kb3dGb2N1czogZmFsc2UscmVmZXRjaEludGVydmFsOiAxMDAwKjYwKjMwLH1cbiAgICAgICAgICAgICk7XG4gICAgcmV0dXJuIHsgcHJvamVjdHMsIGVycm9yUHJvamVjdHMsIGlzRXJyb3JQcm9qZWN0cywgcmVmZXRjaFByb2plY3RzLCBwcm9qZWN0SW1hZ2VzLCBlcnJvclByb2plY3RzSW1hZ2VzLCBpc0Vycm9yUHJvamVjdHNJbWFnZXN9O1xufTtcblxuIl0sIm5hbWVzIjpbImZldGNoV29ya2VycyIsImFwaUNsaWVudCIsImVycm9yIiwiZmV0Y2hTZXJ2aWNlczEiLCJyZXNwb25zZSIsImZldGNoUHJvamVjdHMiLCJmZXRjaFByb2plY3RzSW1hZ2VzIiwiZmV0Y2hCcm9jaHVyZSIsInVzZUdldFNlcnZpY2VzIiwic2VydmljZXMiLCJlcnJvclNlcnZpY2VzIiwiaXNMb2FkaW5nU2VydmljZXMiLCJ1c2VRdWVyeSIsInNlcnZpY2UiLCJpbWFnZSIsInVzZUdldFdvcmplcnMiLCJ3b3JrZXJzIiwiZXJyb3JXb3JrZXJzIiwiaXNFcnJvcldvcmtlcnMiLCJyZWZldGNoV29ya2VycyIsInVzZUdldFByb2plY3RzIiwicHJvamVjdHMiLCJlcnJvclByb2plY3RzIiwiaXNFcnJvclByb2plY3RzIiwicmVmZXRjaFByb2plY3RzIiwiZXJyb3JQcm9qZWN0c0ltYWdlcyIsImlzRXJyb3JQcm9qZWN0c0ltYWdlcyIsInByb2plY3RJbWFnZXMiXSwibWFwcGluZ3MiOiJ1RkFLTyxNQUFNQSxFQUFlLFNBQVksQ0FDaEMsR0FBQSxDQUVBLE9BRGlCLE1BQU1DLEVBQVUsSUFBb0IsVUFBVSxHQUMvQyxXQUNYQyxFQUFPLENBQ1osUUFBUSxJQUFJQSxDQUFLLEVBQ2pCLE1BQ0osQ0FDSixFQUdhQyxFQUFpQixTQUFZLENBQ2xDLEdBQUEsQ0FDQSxNQUFNQyxFQUFXLE1BQU1ILEVBQVUsSUFBaUIsdUNBQXVDLEVBQ2pGLGVBQUEsSUFBSUcsRUFBUyxLQUFNLDZCQUE2QixFQUNoRCxRQUFBLElBQUlBLEVBQVMsS0FBTSw2QkFBNkIsRUFFakRBLEVBQVMsV0FDWEYsRUFBTyxDQUNaLFFBQVEsSUFBSUEsQ0FBSyxFQUNqQixNQUNKLENBQ0osRUFFYUcsRUFBZ0IsU0FBWSxDQUNqQyxHQUFBLENBRUEsT0FEaUIsTUFBTUosRUFBVSxJQUFvQixZQUFZLEdBQ2pELFdBQ1hDLEVBQU8sQ0FDWixRQUFRLElBQUlBLENBQUssRUFDakIsTUFDSixDQUNKLEVBRWFJLEVBQXNCLFNBQVksQ0FDdkMsR0FBQSxDQUVBLE9BRGlCLE1BQU1MLEVBQVUsSUFBMEIsbUJBQW1CLEdBQzlELFdBQ1hDLEVBQU8sQ0FDWixRQUFRLElBQUlBLENBQUssRUFDakIsTUFDSixDQUNKLEVBRWFLLEVBQWdCLFNBQVksQ0FDakMsR0FBQSxDQUVBLE9BRGlCLE1BQU1OLEVBQVUsSUFBZ0IscUJBQXFCLEdBQ3RELFdBQ1hDLEVBQU8sQ0FDWixRQUFRLElBQUlBLENBQUssRUFDakIsTUFDSixDQUNKLEVDdERhTSxFQUFpQixJQUFNLENBQzFCLEtBQUEsQ0FBRSxLQUFNQyxFQUFVLE1BQU9DLEVBQWUsVUFBV0MsR0FBc0JDLEVBQVMsQ0FDcEYsU0FBVSxDQUFDLFVBQVUsRUFDckIsUUFBU1QsRUFDVCxVQUFXLEtBQ1gscUJBQXNCLEdBQ3RCLGdCQUFpQixJQUFZLENBQ2hDLEVBQ1UsT0FBQU0sR0FBQSxNQUFBQSxFQUFBLElBQUtJLEdBQVksQ0FDbEIsTUFBQUMsRUFBUSxJQUFJLE1BQ2xCQSxFQUFNLElBQU1ELEVBQVEsT0FDWixRQUFBLElBQUlDLEVBQU0sSUFBSyxTQUFTLENBQ3BDLEdBRU8sQ0FBRSxTQUFBTCxFQUFVLGNBQUFDLEVBQWUsa0JBQUFDLEVBQ3RDLEVBSU1JLEVBQWdCLElBQU0sQ0FDbEIsS0FBQSxDQUNGLEtBQU1DLEVBQ04sTUFBT0MsRUFDUCxRQUFTQyxFQUNULFFBQVNDLENBQUEsRUFDVFAsRUFDQSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUcsUUFBU1osRUFBYSxVQUFXLEtBQVcscUJBQXNCLEdBQU0sZ0JBQWlCLElBQVcsQ0FBQSxFQUUzSCxlQUFRLElBQUksdUJBQXVCLEVBQ2hDLENBQUUsUUFBQWdCLEVBQVMsYUFBQUMsRUFBYyxlQUFBQyxFQUFnQixlQUFBQyxDQUFjLENBQ2xFLEVBTWFDLEVBQWlCLElBQU0sQ0FDMUIsS0FBQSxDQUNGLEtBQU1DLEVBQ04sTUFBT0MsRUFDUCxRQUFTQyxFQUNULFFBQVNDLENBQUEsRUFDVFosRUFDQSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUcsUUFBU1AsRUFBYyxVQUFXLEtBQVcscUJBQXNCLEdBQU0sZ0JBQWlCLElBQVcsQ0FBQSxFQUU3SCxRQUFRLElBQUksd0JBQXdCLEVBQy9CLEtBQUEsQ0FDRCxNQUFPb0IsRUFDUCxRQUFTQyxFQUNULEtBQU1DLENBQUEsRUFDUmYsRUFDRSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRyxRQUFTTixFQUFvQixVQUFXLElBQUssR0FBRyxHQUFHLHFCQUFzQixHQUFNLGdCQUFpQixJQUFLLEdBQUcsRUFBRyxDQUFBLEVBRWpKLE1BQU8sQ0FBRSxTQUFBZSxFQUFVLGNBQUFDLEVBQWUsZ0JBQUFDLEVBQWlCLGdCQUFBQyxFQUFpQixjQUFBRyxFQUFlLG9CQUFBRixFQUFxQixzQkFBQUMsRUFDNUcifQ==
