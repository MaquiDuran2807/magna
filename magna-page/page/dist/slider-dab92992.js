import{r as S,j as r}from"./jsx-runtime-329ae681.js";import{c as _,b as q,d as B,u as K,S as W,A as J,P as Q,N as X,a as Y}from"./autoplay-f3916783.js";/* empty css                  */import{L as Z}from"./index-47726f55.js";import{u as ee}from"./useLazyload-0697bf1e.js";import{m as te}from"./pagesLayouts-14a09f05.js";import"./index-fdfb6bde.js";function ie(a){let{swiper:e,extendParams:d,on:o}=a;d({a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",slideLabelMessage:"{{index}} / {{slidesLength}}",containerMessage:null,containerRoleDescriptionMessage:null,itemRoleDescriptionMessage:null,slideRole:"group",id:null}}),e.a11y={clicked:!1};let l=null;function c(t){const i=l;i.length!==0&&(i.innerHTML="",i.innerHTML=t)}const s=t=>(Array.isArray(t)?t:[t]).filter(i=>!!i);function u(t){t===void 0&&(t=16);const i=()=>Math.round(16*Math.random()).toString(16);return"x".repeat(t).replace(/x/g,i)}function p(t){t=s(t),t.forEach(i=>{i.setAttribute("tabIndex","0")})}function b(t){t=s(t),t.forEach(i=>{i.setAttribute("tabIndex","-1")})}function g(t,i){t=s(t),t.forEach(n=>{n.setAttribute("role",i)})}function E(t,i){t=s(t),t.forEach(n=>{n.setAttribute("aria-roledescription",i)})}function I(t,i){t=s(t),t.forEach(n=>{n.setAttribute("aria-controls",i)})}function v(t,i){t=s(t),t.forEach(n=>{n.setAttribute("aria-label",i)})}function M(t,i){t=s(t),t.forEach(n=>{n.setAttribute("id",i)})}function j(t,i){t=s(t),t.forEach(n=>{n.setAttribute("aria-live",i)})}function x(t){t=s(t),t.forEach(i=>{i.setAttribute("aria-disabled",!0)})}function A(t){t=s(t),t.forEach(i=>{i.setAttribute("aria-disabled",!1)})}function f(t){if(t.keyCode!==13&&t.keyCode!==32)return;const i=e.params.a11y,n=t.target;e.pagination&&e.pagination.el&&(n===e.pagination.el||e.pagination.el.contains(t.target))&&!t.target.matches(B(e.params.pagination.bulletClass))||(e.navigation&&e.navigation.nextEl&&n===e.navigation.nextEl&&(e.isEnd&&!e.params.loop||e.slideNext(),e.isEnd?c(i.lastSlideMessage):c(i.nextSlideMessage)),e.navigation&&e.navigation.prevEl&&n===e.navigation.prevEl&&(e.isBeginning&&!e.params.loop||e.slidePrev(),e.isBeginning?c(i.firstSlideMessage):c(i.prevSlideMessage)),e.pagination&&n.matches(B(e.params.pagination.bulletClass))&&n.click())}function h(){if(e.params.loop||e.params.rewind||!e.navigation)return;const{nextEl:t,prevEl:i}=e.navigation;i&&(e.isBeginning?(x(i),b(i)):(A(i),p(i))),t&&(e.isEnd?(x(t),b(t)):(A(t),p(t)))}function L(){return e.pagination&&e.pagination.bullets&&e.pagination.bullets.length}function y(){return L()&&e.params.pagination.clickable}function z(){const t=e.params.a11y;L()&&e.pagination.bullets.forEach(i=>{e.params.pagination.clickable&&(p(i),e.params.pagination.renderBullet||(g(i,"button"),v(i,t.paginationBulletMessage.replace(/\{\{index\}\}/,q(i)+1)))),i.matches(B(e.params.pagination.bulletActiveClass))?i.setAttribute("aria-current","true"):i.removeAttribute("aria-current")})}const T=(t,i,n)=>{p(t),t.tagName!=="BUTTON"&&(g(t,"button"),t.addEventListener("keydown",f)),v(t,n),I(t,i)},O=()=>{e.a11y.clicked=!0},D=()=>{requestAnimationFrame(()=>{requestAnimationFrame(()=>{e.destroyed||(e.a11y.clicked=!1)})})},V=t=>{if(e.a11y.clicked)return;const i=t.target.closest(`.${e.params.slideClass}, swiper-slide`);if(!i||!e.slides.includes(i))return;const n=e.slides.indexOf(i)===e.activeIndex,m=e.params.watchSlidesProgress&&e.visibleSlides&&e.visibleSlides.includes(i);n||m||t.sourceCapabilities&&t.sourceCapabilities.firesTouchEvents||(e.isHorizontal()?e.el.scrollLeft=0:e.el.scrollTop=0,e.slideTo(e.slides.indexOf(i),0))},F=()=>{const t=e.params.a11y;t.itemRoleDescriptionMessage&&E(e.slides,t.itemRoleDescriptionMessage),t.slideRole&&g(e.slides,t.slideRole);const i=e.slides.length;t.slideLabelMessage&&e.slides.forEach((n,m)=>{const k=e.params.loop?parseInt(n.getAttribute("data-swiper-slide-index"),10):m,w=t.slideLabelMessage.replace(/\{\{index\}\}/,k+1).replace(/\{\{slidesLength\}\}/,i);v(n,w)})},G=()=>{const t=e.params.a11y;e.el.append(l);const i=e.el;t.containerRoleDescriptionMessage&&E(i,t.containerRoleDescriptionMessage),t.containerMessage&&v(i,t.containerMessage);const n=e.wrapperEl,m=t.id||n.getAttribute("id")||`swiper-wrapper-${u(16)}`,k=e.params.autoplay&&e.params.autoplay.enabled?"off":"polite";M(n,m),j(n,k),F();let{nextEl:w,prevEl:R}=e.navigation?e.navigation:{};w=s(w),R=s(R),w&&w.forEach(N=>T(N,m,t.nextSlideMessage)),R&&R.forEach(N=>T(N,m,t.prevSlideMessage)),y()&&s(e.pagination.el).forEach(U=>{U.addEventListener("keydown",f)}),e.el.addEventListener("focus",V,!0),e.el.addEventListener("pointerdown",O,!0),e.el.addEventListener("pointerup",D,!0)};function H(){l&&l.remove();let{nextEl:t,prevEl:i}=e.navigation?e.navigation:{};t=s(t),i=s(i),t&&t.forEach(n=>n.removeEventListener("keydown",f)),i&&i.forEach(n=>n.removeEventListener("keydown",f)),y()&&s(e.pagination.el).forEach(m=>{m.removeEventListener("keydown",f)}),e.el.removeEventListener("focus",V,!0),e.el.removeEventListener("pointerdown",O,!0),e.el.removeEventListener("pointerup",D,!0)}o("beforeInit",()=>{l=_("span",e.params.a11y.notificationClass),l.setAttribute("aria-live","assertive"),l.setAttribute("aria-atomic","true")}),o("afterInit",()=>{e.params.a11y.enabled&&G()}),o("slidesLengthChange snapGridLengthChange slidesGridLengthChange",()=>{e.params.a11y.enabled&&F()}),o("fromEdge toEdge afterInit lock unlock",()=>{e.params.a11y.enabled&&h()}),o("paginationUpdate",()=>{e.params.a11y.enabled&&z()}),o("destroy",()=>{e.params.a11y.enabled&&H()})}var P=new Map,C=new WeakMap,$=0,ae=void 0;function ne(a){return a?(C.has(a)||($+=1,C.set(a,$.toString())),C.get(a)):"0"}function se(a){return Object.keys(a).sort().filter(e=>a[e]!==void 0).map(e=>`${e}_${e==="root"?ne(a.root):a[e]}`).toString()}function re(a){let e=se(a),d=P.get(e);if(!d){const o=new Map;let l;const c=new IntersectionObserver(s=>{s.forEach(u=>{var p;const b=u.isIntersecting&&l.some(g=>u.intersectionRatio>=g);a.trackVisibility&&typeof u.isVisible>"u"&&(u.isVisible=b),(p=o.get(u.target))==null||p.forEach(g=>{g(b,u)})})},a);l=c.thresholds||(Array.isArray(a.threshold)?a.threshold:[a.threshold||0]),d={id:e,observer:c,elements:o},P.set(e,d)}return d}function oe(a,e,d={},o=ae){if(typeof window.IntersectionObserver>"u"&&o!==void 0){const p=a.getBoundingClientRect();return e(o,{isIntersecting:o,target:a,intersectionRatio:typeof d.threshold=="number"?d.threshold:0,time:0,boundingClientRect:p,intersectionRect:p,rootBounds:p}),()=>{}}const{id:l,observer:c,elements:s}=re(d);let u=s.get(a)||[];return s.has(a)||s.set(a,u),u.push(e),c.observe(a),function(){u.splice(u.indexOf(e),1),u.length===0&&(s.delete(a),c.unobserve(a)),s.size===0&&(c.disconnect(),P.delete(l))}}function le({threshold:a,delay:e,trackVisibility:d,rootMargin:o,root:l,triggerOnce:c,skip:s,initialInView:u,fallbackInView:p,onChange:b}={}){var g;const[E,I]=S.useState(null),v=S.useRef(),[M,j]=S.useState({inView:!!u,entry:void 0});v.current=b,S.useEffect(()=>{if(s||!E)return;let h;return h=oe(E,(L,y)=>{j({inView:L,entry:y}),v.current&&v.current(L,y),y.isIntersecting&&c&&h&&(h(),h=void 0)},{root:l,rootMargin:o,threshold:a,trackVisibility:d,delay:e},p),()=>{h&&h()}},[Array.isArray(a)?a.toString():a,E,l,o,c,s,d,p,e]);const x=(g=M.entry)==null?void 0:g.target,A=S.useRef();!E&&x&&!c&&!s&&A.current!==x&&(A.current=x,j({inView:!!u,entry:void 0}));const f=[I,M.inView,M.entry];return f.ref=f[0],f.inView=f[1],f.entry=f[2],f}const ce=()=>{const a=K();return r.jsxs(r.Fragment,{children:[r.jsx("span",{onClick:()=>a.slideNext(),role:"button",className:"swiper-button-next custom-next-icon","aria-label":"Botón para pasar a la siguiente diapositiva"}),r.jsx("span",{onClick:()=>a.slidePrev(),className:"swiper-button-prev custom-prev-icon","aria-label":"Botón para pasar a la diapositiva anterior"})]})},de=S.memo(({services:a})=>{const e=a==null?void 0:a.map(()=>le({triggerOnce:!1,threshold:.5}));if(!a)return null;const d={hidden:{opacity:0,y:50},show:{opacity:1,y:0,transition:{duration:1}},exit:{opacity:0,y:50}};return r.jsx(W,{spaceBetween:0,slidesPerView:1,autoplay:{delay:5e3,disableOnInteraction:!1,pauseOnMouseEnter:!0},modules:[J,Q,X,ie],className:"mySwiper",children:a==null?void 0:a.map((o,l)=>{var c,s;return r.jsx(Y,{children:r.jsxs("div",{className:"container-fluid sliders",style:{backgroundImage:`linear-gradient(to bottom left,rgba(0, 0, 0, 0.8) 0%,rgba(0, 0, 0, 0.7) 35%,rgba(0, 0, 0, 0.8) 100%), url( ${o.imagen})`},children:[r.jsx("img",{src:o.imagen,alt:"Service Image",style:{display:"none"}}),r.jsx(te.div,{ref:e&&((c=e[l])==null?void 0:c.ref),variants:d,initial:"hidden",animate:e&&((s=e[l])!=null&&s.inView)?"show":"hidden",exit:"exit",children:r.jsx("div",{className:"container",children:r.jsx("div",{className:"row",children:r.jsxs("div",{className:"col-12 col-lg-8  description",children:[r.jsx("h1",{className:"title text-capitalize",children:o.nombre}),r.jsx("br",{}),r.jsx("p",{className:"text-white col-12 col-lg-10 ",children:o.descripcion}),r.jsxs("div",{className:"col-12 ",children:[r.jsx("br",{}),r.jsx(Z,{to:"/contact",children:r.jsx("button",{className:"llamado",children:"Contactar"})})]}),r.jsx(ce,{})]})})})})]})},l)})})});function be({services:a}){const{isVisible:e,ref:d}=ee("100px");return r.jsx("div",{id:"LazySlider",ref:d,children:e?r.jsx(de,{services:a}):null})}export{be as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
