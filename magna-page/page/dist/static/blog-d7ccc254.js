import{j as s}from"./@react-pdf/renderer-d806818e.js";import{c as u}from"./@tanstack/react-query-devtools-32a2eb86.js";import{m as f}from"./index-143a15ce.js";import{r as o}from"./react-a84639bd.js";import{B as p,S as N,f as v,a as b}from"./sidebarBolgs-281a46b6.js";import{L as x}from"./react-router-dom-3e01f71a.js";import{a as y}from"./index.esm-6aca8226.js";import"./react-dom-47c417a6.js";import"./framer-motion-31cb7f15.js";import"./swiper-9dc9b1ac.js";import"./axios-28bc18a3.js";import"./react-pdf-3633ae72.js";import"./react-floating-whatsapp-31f2a923.js";import"./react-icons-293a2bbc.js";import"./index.esm-59189682.js";const S=({blogs:i,search:a})=>s.jsxs(s.Fragment,{children:[s.jsxs("div",{className:"row",children:[a&&a.length===0&&s.jsx("h3",{children:"No se encontraron resultados"}),a&&a.length>0&&s.jsx("h3",{children:"Resultados de la búsqueda"}),a&&(a==null?void 0:a.map(e=>s.jsx("div",{className:"col-lg-4 col-md-4 col-sm-6 ",children:s.jsx(x,{to:`/blog/${e.id}`,className:"link-blogs",children:s.jsxs("div",{className:"card card-blog mt-3 small-card",children:[s.jsx("div",{className:"card-img-top",children:s.jsx("img",{src:e.image,className:"img-fluid small-image",alt:e.title})}),s.jsxs("div",{className:"card-body",children:[s.jsx("h5",{className:"card-title",children:e.title}),s.jsxs("p",{className:"card-text",children:[e.description.slice(0,200),"..."]})]})]})})},e.id))),a&&a.length>0&&s.jsx("hr",{className:"mt-5"})]}),s.jsx("div",{className:"row",children:i.map(e=>{let r="",l="",c="";return e.important===!1?(r="col-lg-4 col-md-4 col-sm-6",c="small-card",l="small-image"):e.important===!0?(r="col-lg-6 col-md-12 col-sm-12 ",l="big-image",c="big-card"):(r="col-lg-3 col-md-4 col-sm-6",l="small-image",c="small-card"),s.jsx("div",{className:r,children:s.jsx(x,{to:`/blog/${e.id}`,className:"link-blogs",children:s.jsxs("div",{className:`card card-blog mt-3 ${c}`,children:[s.jsx("div",{className:"card-img-top",children:s.jsx("img",{src:e.image,className:` img-fluid ${l}`,alt:e.title})}),s.jsxs("div",{className:"card-body",children:[s.jsx("h5",{className:"card-title",children:e.title}),s.jsxs("p",{className:"card-text",children:[e.description.slice(0,200),"..."]})]})]})})},e.id)})})]}),B=({setFilter:i})=>{const[a,e]=o.useState(""),r=l=>{e(l.target.value),i(l.target.value)};return s.jsxs("div",{children:[s.jsx("input",{type:"text",value:a,onChange:r,placeholder:"Buscar...",className:"blog-search"}),s.jsx(y,{className:"ms-2"})]})},z=()=>{const[i,a]=o.useState(""),[e,r]=o.useState(null),{data:l,isError:c,isLoading:g,fetchNextPage:h,hasNextPage:n,isFetchingNextPage:d}=u({queryKey:["blogs"],queryFn:({pageParam:t=0})=>b(t),initialPageParam:"1",staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchInterval:1e3*60*30,getNextPageParam:t=>{if(console.log(t,"lastPage"),t!=null&&t.nextPage)return console.log(t.nextPage,"lastPage.nextPage"),t.nextPage.split("=")[1]}});if(o.useEffect(()=>{if(!i)return;(async()=>{const m=await v(i);m&&r(m)})()},[i]),o.useEffect(()=>{l&&l.pages[0]&&console.log(l.pages[0].blogs,"data.pages[0].blogs")},[]),c)return s.jsx("div",{children:"Error"});if(g)return s.jsx(f,{});if(console.log(l,"data"),!l)return;const j=l.pages.flatMap(t=>(t==null?void 0:t.blogs)??[]);return s.jsx("div",{className:"blog-container pt-3",children:s.jsx(p,{children:s.jsxs("div",{className:"container-fluid",children:[s.jsx("div",{className:"blog-header  text-center",children:s.jsx("h1",{children:"MagnaBlog"})}),s.jsx("div",{className:" text-center",children:s.jsx(B,{setFilter:a})}),s.jsxs("div",{className:"blog-cards ",children:[s.jsxs("div",{className:"row",children:[s.jsx("div",{className:"col-lg-8 col-12",children:s.jsx(S,{blogs:j,search:e})}),s.jsx("div",{className:"col-md-4 col-12",children:s.jsx(N,{})})]}),s.jsx("button",{onClick:()=>h(),className:"btn btn-primary",type:"button",disabled:!n||d,style:{marginTop:"2rem"},children:d?"Loading more...":n?"Cargar más blogs":"No hay más blogs"})]})]})})})};export{z as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
