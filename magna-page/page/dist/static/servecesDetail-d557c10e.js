import{_,u as O}from"./@tanstack/react-query-devtools-a5fc292d.js";import{j as e}from"./spinner-75e68d5d.js";import{r}from"./react-1cdf6ce0.js";import{A as R,a as z}from"./index.esm-c6bbc34e.js";import{S as M,b as V,c as B,N as L,d as q,e as F,f as k,g as $,h as K,P as Q}from"./main-85e60c12.js";import{B as W}from"./banner-ae774052.js";import{u as G}from"./ScreenSize-8bca974b.js";import{u as N}from"./react-router-dom-3d2ba1f5.js";import{m as p,A as H}from"./framer-motion-e3192eb3.js";import"./index.esm-387aec9d.js";import"./react-dom-983a5519.js";import"./axios-28bc18a3.js";import"./swiper-dad05047.js";import"./index.esm-d847aead.js";const J=({subServicios:n,subtitle:l})=>(console.log("se reinicio el slider",n,l),e.jsx(M,{spaceBetween:30,slidesPerView:1,autoplay:{delay:5e3,disableOnInteraction:!1,pauseOnMouseEnter:!0},navigation:!0,modules:[V,B,L],children:n==null?void 0:n.map((a,d)=>e.jsx(q,{children:e.jsxs("div",{className:`slide-service ${a.nombre}`,children:[e.jsx("img",{src:a.imagen,alt:a.nombre,className:"img-fluid img-subservicio"}),e.jsx("h3",{children:l?a.nombre:""})]})},d))}));const U=r.lazy(()=>_(()=>import("./brochure-41ff615d.js"),["static/brochure-41ff615d.js","static/spinner-75e68d5d.js","static/react-1cdf6ce0.js","static/main-85e60c12.js","static/@tanstack/react-query-devtools-a5fc292d.js","static/react-dom-983a5519.js","static/react-router-dom-3d2ba1f5.js","static/axios-28bc18a3.js","static/swiper-dad05047.js","static/framer-motion-e3192eb3.js","static/index-1ffa2a7c.css"])),w=r.lazy(()=>_(()=>import("./Servicios-e5882be8.js"),["static/Servicios-e5882be8.js","static/spinner-75e68d5d.js","static/react-1cdf6ce0.js","static/@tanstack/react-query-devtools-a5fc292d.js","static/setionHeader-0090b7fc.js","static/framer-motion-e3192eb3.js","static/react-router-dom-3d2ba1f5.js","static/react-dom-983a5519.js","static/useLazyload-da8a0755.js","static/Servicios-7ee61343.css"])),me=({issue:n})=>{var y,S;const l=N();console.log(l,"parametros");const{id:a}=N();let[d,x]=r.useState("Nuestros Servicios"),[P,m]=r.useState(F);const{data:t}=O({queryKey:["services"],staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchInterval:1e3*60*30});let j="container";const[c,v]=r.useState(),[o,f]=r.useState(null),[A,u]=r.useState(null),[E,g]=r.useState(!0),b=s=>{if(!t)return;const i=t.filter(C=>C.nombre===s);return u(i[0].subservicios),i};r.useEffect(()=>{if(t)if(a){const s=b(a);if(s){const i="servicios de "+s[0].nombre;x(i),v(s),s[0].nombre==="Topografía"&&m(k),s[0].nombre==="Ingeniería y Consultoría"&&m($),s[0].nombre==="Medio Ambiente"&&m(K)}}else{v(t),x("Nuestros Servicios");const s=t.flatMap(i=>i.subservicios);u(s)}},[t,a]);const{width:I}=G(),D=I<=1e3,h=r.useRef(null);D&&(j="mobile");const T=async s=>{if(!s)return;const i=[];i.push(s),f(i),g(!1),console.log(i,"selectedSubServicio"),i&&(u(i),a&&setTimeout(()=>{f(null),g(!0),t&&b(a)},2e4))};return r.useEffect(()=>{h.current&&o&&h.current.scrollIntoView({behavior:"smooth"})},[o]),c?(console.log(a,"servicio"),e.jsx(e.Fragment,{children:e.jsxs(Q,{children:[e.jsx(W,{title:c.length==1?c[0].nombre:"Servicios",paragraph:d.toString(),image:P}),e.jsxs("div",{className:j,children:[e.jsx("div",{className:"row servicio",children:c.length===1?e.jsx("div",{className:"col-12",children:e.jsx("h2",{className:"text-center",children:d})}):e.jsx("div",{className:"row",children:e.jsx(w,{})})}),e.jsxs("div",{className:"row content",children:[e.jsx("div",{className:"col-12 col-md-4 ",children:e.jsx("div",{className:`aside ${n}-template`,children:c.map(s=>e.jsx("div",{children:e.jsxs("div",{className:"row px-2",children:[e.jsx("div",{className:"col-12",children:e.jsxs(p.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:.6},className:"servicio",children:[e.jsx("h3",{children:s==null?void 0:s.nombre}),e.jsx("p",{className:"px-2",children:s==null?void 0:s.descripcion})]},s.id)}),e.jsx("div",{children:s.subservicios.map(i=>e.jsx("div",{className:"row",children:e.jsx("div",{className:"col-12",children:e.jsx(p.div,{onClick:()=>T(i),initial:{opacity:0},animate:{opacity:1},transition:{duration:.3},className:"subservicio",children:e.jsxs("div",{className:"row items mx-3",children:[e.jsx("span",{className:"col-1 icon-row",children:e.jsx(R,{})}),e.jsxs("h5",{className:"col-10",children:[i.nombre+"   ",e.jsx("span",{children:e.jsx(z,{})})]})]})},i.id)})},i.id))})]})},s.id))})}),e.jsxs("div",{className:"col-12 col-md-8 ",children:[e.jsx("div",{className:"row slider",children:e.jsx(J,{subServicios:A,subtitle:E})}),e.jsx("div",{ref:h,children:e.jsx("br",{})},o&&((y=o[0])==null?void 0:y.descripcion)),e.jsx("br",{}),e.jsx("br",{}),e.jsxs("div",{className:"row porque-elegirnos",children:[e.jsx(H,{children:e.jsxs(p.div,{initial:{height:0,opacity:0},animate:{height:"auto",opacity:1},exit:{height:0,opacity:0,scale:.5},transition:{duration:.3,delay:1,delayChildren:.3,staggerChildren:.3},children:[e.jsx("h2",{children:o?o[0].nombre:"Servicios de calidad y con la más alta tecnología"}),e.jsx("p",{children:o?o[0].descripcion:"Somos una empresa con más de 10 años de experiencia en el mercado, con profesionales altamente calificados y con amplia experiencia en el sector público y privado, brindando servicios de calidad y con la más alta tecnología."})]},o&&((S=o[0])==null?void 0:S.id))}),e.jsx("div",{}),e.jsxs("div",{className:"my-5",children:[e.jsx("h2",{children:"Brochure"}),e.jsx("p",{children:"Para obtener una visión completa de nuestros servicios y ventajas, te invitamos a descargar nuestro brochure informativo. Aquí encontrarás detalles exhaustivos sobre nuestras ofertas, testimonios de clientes satisfechos y la información de contacto necesaria para dar el siguiente paso hacia una colaboración exitosa. ¡Descubre cómo podemos ayudarte a alcanzar tus objetivos hoy mismo!"}),e.jsx(U,{})]})]})]}),c.length===1?e.jsx("div",{className:"row",children:e.jsx(w,{})}):""]})]})]})})):e.jsx("h3",{children:"Error"})};export{me as default};


//# sourceMappingURL=data:application/json;base64,