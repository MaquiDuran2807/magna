import{j as e}from"./@react-pdf/renderer-d806818e.js";import{r as d}from"./react-a84639bd.js";import{u as g}from"./@tanstack/react-query-devtools-5e1ae0d5.js";import{L as _}from"./react-router-dom-10f375c6.js";import{u as w}from"./main-4c38b34e.js";import{m as f}from"./framer-motion-31cb7f15.js";import"./react-dom-47c417a6.js";import"./AuthProvider-c4c28575.js";import"./axios-28bc18a3.js";import"./splashScreen-0d7c0e1b.js";import"./swiper-dad05047.js";import"./react-pdf-3633ae72.js";import"./react-floating-whatsapp-31f2a923.js";import"./react-icons-293a2bbc.js";const A=({type:a,actualPage:m,imagenes:n})=>{const[u,c]=d.useState([]),[y,p]=d.useState([]),[x,v]=d.useState([]),[s,h]=d.useState(),{data:o}=g({queryKey:["projects"],staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchOnMount:!1,refetchOnReconnect:!1,refetchInterval:1e3*60*30});if(!o)return null;d.useEffect(()=>{if(a===0){const r=Array.isArray(o.results)?o.results.map(i=>i.tipo).filter((i,l,N)=>N.findIndex(b=>b.id===i.id)===l):[];c(o.results),p(n),v([{id:0,name:"Todos"},...r]);return}const t=o.results.filter(r=>r.tipo.id===a).filter(r=>r.id!==m);c(t),p(n)},[a,m,n]);const j=t=>{if(t===0){c(o.results),h(void 0);return}if(!t)return;const r=x.filter(l=>l.id===t)[0];if(!r)return;const i=Array.isArray(o.results)?o.results.filter(l=>l.tipo.id===r.id):[];h(r),c(i)};return e.jsx("div",{children:e.jsxs("div",{className:"container",children:[e.jsx("div",{className:"row",children:a===0?x?x.map(t=>e.jsx(f.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.5},className:"col-12 col-sm-6 col-lg-3 col-md-4",children:e.jsx("button",{className:"boton-1 ",onClick:()=>j(t.id),children:t.name})},t.id)):null:e.jsx(f.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.5},className:"col-4 col-lg-3",children:e.jsx("button",{className:"boton-1",onClick:()=>j(s==null?void 0:s.id),children:s==null?void 0:s.name})},s==null?void 0:s.id)}),e.jsx("div",{className:"row",children:Array.isArray(u)&&u.map(t=>{let r="no hay imagen";try{r=y.filter(i=>i.proyecto===t.id)[0].imagen}catch(i){console.error(i)}return e.jsx(f.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0,x:-100},transition:{duration:.6},className:"col-md-6 col-lg-4 col-12 col-xl-3",children:e.jsx("div",{className:"my-5",children:e.jsx("div",{className:"card-project bg-white rounded  transition cursor-pointer m-auto ",children:e.jsxs("div",{className:"card-body card-body-projects d-flex flex-column justify-content-between h-98",children:[r?e.jsx("img",{src:r,alt:"",className:"img-fluid card-img w-100 h-160"}):e.jsx("p",{children:"No hay imagen"}),e.jsx("div",{className:"content-1 d-flex flex-column align-items-stretch flex-grow-1 p-20",children:e.jsxs("div",{children:[e.jsx("h5",{className:"card-title text-center fw-bold text-black mb-5 mt-4",children:t.nombre}),e.jsx("p",{className:"card-text text-center",children:`${t.descripcion.slice(0,100)} ...`})]})}),e.jsx(_,{to:`/projects/${t.id}`,className:"boton-1 text-center end-boton",children:"Ver m√°s"})]})})})},t.id)})})]})})};function K({type:a,actualPage:m,imagenes:n}){const{isVisible:u,ref:c}=w("100px");return e.jsx("div",{id:"LazyServices",ref:c,children:u?e.jsx(A,{type:a,actualPage:m,imagenes:n}):null})}export{K as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
