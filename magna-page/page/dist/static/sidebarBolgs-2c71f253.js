import{j as s}from"./spinner-75e68d5d.js";import{r as i}from"./react-1cdf6ce0.js";import{j,k as p,l as o,m as n,n as v,o as b}from"./main-85e60c12.js";import{L as t,N as d,a as f}from"./react-router-dom-3d2ba1f5.js";import{u as N}from"./useLazyload-da8a0755.js";import{FloatWhatsapp as y}from"./floawhatsapp-7c6a976d.js";import $ from"./footer1-d75c55ee.js";import{A as k}from"./index.esm-c6bbc34e.js";import{b as w,u as B}from"./@tanstack/react-query-devtools-a5fc292d.js";const h=i.forwardRef(({bsPrefix:e,fluid:a=!1,as:r="div",className:c,...x},u)=>{const l=j(e,"container"),g=typeof a=="string"?`-${a}`:"-fluid";return s.jsx(r,{ref:u,...x,className:p(c,a?`${l}${g}`:l)})});h.displayName="Container";const m=h,D=()=>w({mutationKey:["blog"],mutationFn:async({id:e})=>{const a=await o.get(`/blog/${e}/`);return console.log("useFetchBlog",a.data,"response.data",e),a.data}}),K=async e=>{try{const a=await o.get(`/blog/?page=${e}`);console.log(a.data);const r=a.data.next,c=a.data.results;return{nextPage:r,blogs:c}}catch(a){console.log(a);return}},L=async()=>{try{const e=await o.get("/blog/recent/");return console.log(e.data),e.data}catch(e){console.log(e);return}},M=async e=>{try{const a=await o.get(`/blog/search/${e}/`);return console.log(a.data),a.data}catch(a){console.log(a);return}};const F=()=>{const e="text-black";return s.jsx(s.Fragment,{children:s.jsx(m,{children:s.jsx(n,{className:"navbar",expand:"lg",children:s.jsxs(m,{children:[s.jsx(n.Brand,{as:t,to:"/",children:s.jsx(v,{width:"150",height:"30"})}),s.jsx(n.Toggle,{"aria-controls":"basic-navbar-nav"}),s.jsx(n.Collapse,{id:"basic-navbar-nav",children:s.jsxs(b,{className:"ms-auto",children:[s.jsx(t,{className:`links nav navbar  ${e} `,to:"/AboutUS",children:"Quiénes somos"}),s.jsx(d,{className:`links nav navbar  ${e} `,to:"/servicios#header",children:"Servicios"}),s.jsx(t,{className:`links nav navbar  ${e} `,to:"/contact",children:"Contacto"}),s.jsx(d,{className:`links nav navbar  ${e} `,to:"/projects",children:"Proyectos"}),s.jsx(t,{className:`links nav navbar  ${e} `,to:"/cotizador",children:"Login"}),s.jsx(t,{to:"/blog",className:"links nav navbar text-black",children:"blog "}),s.jsx("a",{className:`links nav navbar  ${e} `,href:"/store/",children:s.jsx("div",{className:"store",children:s.jsx("span",{children:"Magnatienda"})})})]})})]})})})})};function C(){const{isVisible:e,ref:a}=N("100px");return s.jsx("div",{id:"LazyServices",ref:a,children:e?s.jsx(F,{}):null})}const Q=({children:e})=>{const a=i.useRef(null),r=f();return i.useEffect(()=>{a.current&&a.current.scrollIntoView({behavior:"smooth"})},[r]),s.jsxs(s.Fragment,{children:[s.jsxs("header",{ref:a,children:[s.jsx(C,{}),s.jsx("div",{className:"spand",id:"header"})]}),e,s.jsx($,{}),s.jsx(y,{})]})},T=()=>{const{data:e}=B({queryKey:["importantBlogs"],queryFn:L,staleTime:18e5,refetchOnWindowFocus:!1,refetchInterval:18e5});return e?s.jsxs("div",{className:"blog-sidebar ",children:[s.jsx("h3",{className:"ml-5",children:"Artículos más importantes "}),s.jsx("ul",{children:e.map(a=>s.jsx("li",{children:s.jsx("div",{className:"row",children:s.jsxs(t,{to:`/blog/${a.id}`,children:[s.jsx("div",{className:"col-3",children:s.jsx("img",{src:a.image,alt:a.title,style:{width:"120px",borderRadius:"10px"}})}),s.jsxs("div",{className:"col-8 fs-4",children:[a.title," ",s.jsx(k,{}),s.jsxs("p",{className:"text-white ",children:[" Autor :  ",a.author.last_name]})]}),s.jsx("hr",{})]})})},a.id))})]}):s.jsx("p",{children:"Cargando..."})};export{Q as B,T as S,K as a,M as f,D as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
