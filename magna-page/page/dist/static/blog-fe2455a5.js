import{_ as j,a as p}from"./@tanstack/react-query-devtools-a5fc292d.js";import{j as e}from"./spinner-75e68d5d.js";import{r as o,a as f}from"./react-1cdf6ce0.js";import{B as N,S as v,f as b,a as y}from"./sidebarBolgs-2c71f253.js";import{L as x}from"./react-router-dom-3d2ba1f5.js";import{a as B}from"./index.esm-d847aead.js";import{u as S}from"./useLazyload-da8a0755.js";import"./main-85e60c12.js";import"./react-dom-983a5519.js";import"./axios-28bc18a3.js";import"./swiper-dad05047.js";import"./framer-motion-e3192eb3.js";import"./floawhatsapp-7c6a976d.js";import"./footer1-d75c55ee.js";import"./index.esm-387aec9d.js";import"./index.esm-6df78010.js";import"./index.esm-c6bbc34e.js";const L=({blogs:r,search:a})=>e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"row",children:[a&&a.length===0&&e.jsx("h3",{children:"No se encontraron resultados"}),a&&a.length>0&&e.jsx("h3",{children:"Resultados de la búsqueda"}),a&&(a==null?void 0:a.map(s=>e.jsx("div",{className:"col-lg-4 col-md-4 col-sm-6 ",children:e.jsx(x,{to:`/blog/${s.id}`,className:"link-blogs",children:e.jsxs("div",{className:"card card-blog mt-3 small-card",children:[e.jsx("div",{className:"card-img-top",children:e.jsx("img",{src:s.image,className:"img-fluid small-image",alt:s.title})}),e.jsxs("div",{className:"card-body",children:[e.jsx("h5",{className:"card-title",children:s.title}),e.jsxs("p",{className:"card-text",children:[s.description.slice(0,200),"..."]})]})]})})},s.id))),a&&a.length>0&&e.jsx("hr",{className:"mt-5"})]}),e.jsx("div",{className:"row",children:r.map(s=>{let i="",l="",c="";return s.important===!1?(i="col-lg-4 col-md-4 col-sm-6",c="small-card",l="small-image"):s.important===!0?(i="col-lg-6 col-md-12 col-sm-12 ",l="big-image",c="big-card"):(i="col-lg-3 col-md-4 col-sm-6",l="small-image",c="small-card"),e.jsx("div",{className:i,children:e.jsx(x,{to:`/blog/${s.id}`,className:"link-blogs",children:e.jsxs("div",{className:`card card-blog mt-3 ${c}`,children:[e.jsx("div",{className:"card-img-top",children:e.jsx("img",{src:s.image,className:` img-fluid ${l}`,alt:s.title})}),e.jsxs("div",{className:"card-body",children:[e.jsx("h5",{className:"card-title",children:s.title}),e.jsxs("p",{className:"card-text",children:[s.description.slice(0,200),"..."]})]})]})})},s.id)})})]}),E=({setFilter:r})=>{const[a,s]=o.useState(""),i=l=>{s(l.target.value),r(l.target.value)};return e.jsxs("div",{children:[e.jsx("input",{type:"text",value:a,onChange:i,placeholder:"Buscar...",className:"blog-search"}),e.jsx(B,{className:"ms-2"})]})},P=f.lazy(()=>j(()=>import("./main-85e60c12.js").then(r=>r.x),["static/main-85e60c12.js","static/@tanstack/react-query-devtools-a5fc292d.js","static/react-1cdf6ce0.js","static/spinner-75e68d5d.js","static/react-dom-983a5519.js","static/react-router-dom-3d2ba1f5.js","static/axios-28bc18a3.js","static/swiper-dad05047.js","static/framer-motion-e3192eb3.js","static/index-1ffa2a7c.css"])),_=()=>{const[r,a]=o.useState(""),[s,i]=o.useState(null),{data:l,isError:c,isLoading:g,fetchNextPage:h,hasNextPage:n,isFetchingNextPage:d}=p({queryKey:["blogs"],queryFn:({pageParam:t=0})=>y(t),initialPageParam:"1",staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchInterval:1e3*60*30,getNextPageParam:t=>{if(console.log(t,"lastPage"),t!=null&&t.nextPage)return console.log(t.nextPage,"lastPage.nextPage"),t.nextPage.split("=")[1]}});if(o.useEffect(()=>{if(!r)return;(async()=>{const m=await b(r);m&&i(m)})()},[r]),o.useEffect(()=>{l&&l.pages[0]&&console.log(l.pages[0].blogs,"data.pages[0].blogs")},[]),c)return e.jsx("div",{children:"Error"});if(g)return e.jsx(P,{});if(console.log(l,"data"),!l)return;const u=l.pages.flatMap(t=>(t==null?void 0:t.blogs)??[]);return e.jsx("div",{className:"blog-container pt-3",children:e.jsx(N,{children:e.jsxs("div",{className:"container-fluid",children:[e.jsx("div",{className:"blog-header  text-center",children:e.jsx("h1",{children:"MagnaBlog"})}),e.jsx("div",{className:" text-center",children:e.jsx(E,{setFilter:a})}),e.jsxs("div",{className:"blog-cards ",children:[e.jsxs("div",{className:"row",children:[e.jsx("div",{className:"col-lg-8 col-12",children:e.jsx(L,{blogs:u,search:s})}),e.jsx("div",{className:"col-md-4 col-12",children:e.jsx(v,{})})]}),e.jsx("button",{onClick:()=>h(),className:"btn btn-primary",type:"button",disabled:!n||d,style:{marginTop:"2rem"},children:d?"Loading more...":n?"Cargar más blogs":"No hay más blogs"})]})]})})})};function W(){const{isVisible:r,ref:a}=S("100px");return e.jsx("div",{id:"LazyBlog",ref:a,children:r?e.jsx(_,{}):null})}export{W as default};


//# sourceMappingURL=data:application/json;base64,