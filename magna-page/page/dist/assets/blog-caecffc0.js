import{Q as j,v as x,w as N,x as v,y as p,j as e,L as f,r as d,R as P,_ as b}from"./index-e183d08d.js";import{B as y,S as B,f as R,a as S}from"./sidebarBolgs-82cb03dd.js";import{a as w}from"./index.esm-8c98af6d.js";import{u as F}from"./useLazyload-11af7c3a.js";import"./footer1-8551e831.js";import"./index.esm-7087b389.js";import"./iconBase-5a6e9e1a.js";import"./index.esm-d1884518.js";import"./index.esm-19ea8574.js";var M=class extends j{constructor(s,t){super(s,t)}bindMethods(){super.bindMethods(),this.fetchNextPage=this.fetchNextPage.bind(this),this.fetchPreviousPage=this.fetchPreviousPage.bind(this)}setOptions(s,t){super.setOptions({...s,behavior:x()},t)}getOptimisticResult(s){return s.behavior=x(),super.getOptimisticResult(s)}fetchNextPage(s){return this.fetch({...s,meta:{fetchMore:{direction:"forward"}}})}fetchPreviousPage(s){return this.fetch({...s,meta:{fetchMore:{direction:"backward"}}})}createResult(s,t){var n,o,g,r;const{state:a}=s,c=super.createResult(s,t),{isFetching:i,isRefetching:l}=c,h=i&&((o=(n=a.fetchMeta)==null?void 0:n.fetchMore)==null?void 0:o.direction)==="forward",m=i&&((r=(g=a.fetchMeta)==null?void 0:g.fetchMore)==null?void 0:r.direction)==="backward";return{...c,fetchNextPage:this.fetchNextPage,fetchPreviousPage:this.fetchPreviousPage,hasNextPage:N(t,a.data),hasPreviousPage:v(t,a.data),isFetchingNextPage:h,isFetchingPreviousPage:m,isRefetching:l&&!h&&!m}}};function L(s,t){return p(s,M,t)}const O=({blogs:s,search:t})=>e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"row",children:[t&&t.length===0&&e.jsx("h3",{children:"No se encontraron resultados"}),t&&t.length>0&&e.jsx("h3",{children:"Resultados de la búsqueda"}),t&&(t==null?void 0:t.map(a=>e.jsx("div",{className:"col-lg-4 col-md-4 col-sm-6 ",children:e.jsx(f,{to:`/blog/${a.id}`,className:"link-blogs",children:e.jsxs("div",{className:"card card-blog mt-3 small-card",children:[e.jsx("div",{className:"card-img-top",children:e.jsx("img",{src:a.image,className:"img-fluid small-image",alt:a.title})}),e.jsxs("div",{className:"card-body",children:[e.jsx("h5",{className:"card-title",children:a.title}),e.jsxs("p",{className:"card-text",children:[a.description.slice(0,200),"..."]})]})]})})},a.id))),t&&t.length>0&&e.jsx("hr",{className:"mt-5"})]}),e.jsx("div",{className:"row",children:s.map(a=>{let c="",i="",l="";return a.important===!1?(c="col-lg-4 col-md-4 col-sm-6",l="small-card",i="small-image"):a.important===!0?(c="col-lg-6 col-md-12 col-sm-12 ",i="big-image",l="big-card"):(c="col-lg-3 col-md-4 col-sm-6",i="small-image",l="small-card"),e.jsx("div",{className:c,children:e.jsx(f,{to:`/blog/${a.id}`,className:"link-blogs",children:e.jsxs("div",{className:`card card-blog mt-3 ${l}`,children:[e.jsx("div",{className:"card-img-top",children:e.jsx("img",{src:a.image,className:` img-fluid ${i}`,alt:a.title})}),e.jsxs("div",{className:"card-body",children:[e.jsx("h5",{className:"card-title",children:a.title}),e.jsxs("p",{className:"card-text",children:[a.description.slice(0,200),"..."]})]})]})})},a.id)})})]}),E=({setFilter:s})=>{const[t,a]=d.useState(""),c=i=>{a(i.target.value),s(i.target.value)};return e.jsxs("div",{children:[e.jsx("input",{type:"text",value:t,onChange:c,placeholder:"Buscar...",className:"blog-search"}),e.jsx(w,{className:"ms-2"})]})},_=P.lazy(()=>b(()=>import("./index-e183d08d.js").then(s=>s.aa),["assets/index-e183d08d.js","assets/index-9f47fd08.css"])),C=()=>{const[s,t]=d.useState(""),[a,c]=d.useState(null),{data:i,isError:l,isLoading:h,fetchNextPage:m,hasNextPage:n,isFetchingNextPage:o}=L({queryKey:["blogs"],queryFn:({pageParam:r=0})=>S(r),initialPageParam:"1",staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchInterval:1e3*60*30,getNextPageParam:r=>{if(console.log(r,"lastPage"),r!=null&&r.nextPage)return console.log(r.nextPage,"lastPage.nextPage"),r.nextPage.split("=")[1]}});if(d.useEffect(()=>{if(!s)return;(async()=>{const u=await R(s);u&&c(u)})()},[s]),d.useEffect(()=>{i&&i.pages[0]&&console.log(i.pages[0].blogs,"data.pages[0].blogs")},[]),l)return e.jsx("div",{children:"Error"});if(h)return e.jsx(_,{});if(console.log(i,"data"),!i)return;const g=i.pages.flatMap(r=>(r==null?void 0:r.blogs)??[]);return e.jsx("div",{className:"blog-container pt-3",children:e.jsx(y,{children:e.jsxs("div",{className:"container-fluid",children:[e.jsx("div",{className:"blog-header  text-center",children:e.jsx("h1",{children:"MagnaBlog"})}),e.jsx("div",{className:" text-center",children:e.jsx(E,{setFilter:t})}),e.jsxs("div",{className:"blog-cards ",children:[e.jsxs("div",{className:"row",children:[e.jsx("div",{className:"col-lg-8 col-12",children:e.jsx(O,{blogs:g,search:a})}),e.jsx("div",{className:"col-md-4 col-12",children:e.jsx(B,{})})]}),e.jsx("button",{onClick:()=>m(),className:"btn btn-primary",type:"button",disabled:!n||o,style:{marginTop:"2rem"},children:o?"Loading more...":n?"Cargar más blogs":"No hay más blogs"})]})]})})})};function A(){const{isVisible:s,ref:t}=F("100px");return e.jsx("div",{id:"LazyBlog",ref:t,children:s?e.jsx(C,{}):null})}export{A as default};


//# sourceMappingURL=data:application/json;base64,