{"version":3,"file":"resolve-element-cae855d4.js","sources":["../../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/use-spring.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/animators/js/index.mjs';\nimport { millisecondsToSeconds } from '../utils/time-conversion.mjs';\nimport { frameData } from '../frameloop/frame.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            stopAnimation();\n            activeSpringAnimation.current = animateValue({\n                keyframes: [value.get(), v],\n                velocity: value.getVelocity(),\n                type: \"spring\",\n                restDelta: 0.001,\n                restSpeed: 0.01,\n                ...config,\n                onUpdate: set,\n            });\n            /**\n             * If we're between frames, resync the animation to the frameloop.\n             */\n            if (!frameData.isProcessing) {\n                const delta = performance.now() - frameData.timestamp;\n                if (delta < 30) {\n                    activeSpringAnimation.current.time =\n                        millisecondsToSeconds(delta);\n                }\n            }\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseFloat(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n"],"names":["useMotionValue","initial","value","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","useSpring","source","config","activeSpringAnimation","useRef","isMotionValue","stopAnimation","useInsertionEffect","v","set","animateValue","frameData","delta","millisecondsToSeconds","useIsomorphicLayoutEffect","resolveElements","elements","scope","selectorCache","_a","root","invariant"],"mappings":"gHAsBA,SAASA,EAAeC,EAAS,CAC7B,MAAMC,EAAQC,EAAY,IAAMC,EAAYH,CAAO,CAAC,EAM9C,CAAE,SAAAI,CAAQ,EAAKC,EAAU,WAACC,CAAmB,EACnD,GAAIF,EAAU,CACV,KAAM,EAAGG,CAAS,EAAIC,EAAQ,SAACR,CAAO,EACtCS,EAAS,UAAC,IAAMR,EAAM,GAAG,SAAUM,CAAS,EAAG,CAAA,CAAE,CACpD,CACD,OAAON,CACX,CCPA,SAASS,EAAUC,EAAQC,EAAS,GAAI,CACpC,KAAM,CAAE,SAAAR,CAAQ,EAAKC,EAAU,WAACC,CAAmB,EAC7CO,EAAwBC,SAAO,IAAI,EACnCb,EAAQF,EAAegB,EAAcJ,CAAM,EAAIA,EAAO,MAAQA,CAAM,EACpEK,EAAgB,IAAM,CACpBH,EAAsB,SACtBA,EAAsB,QAAQ,MAE1C,EACII,OAAAA,EAAAA,mBAAmB,IACRhB,EAAM,OAAO,CAACiB,EAAGC,IAAQ,CAK5B,GAAIf,EACA,OAAOe,EAAID,CAAC,EAchB,GAbAF,IACAH,EAAsB,QAAUO,EAAa,CACzC,UAAW,CAACnB,EAAM,IAAG,EAAIiB,CAAC,EAC1B,SAAUjB,EAAM,YAAa,EAC7B,KAAM,SACN,UAAW,KACX,UAAW,IACX,GAAGW,EACH,SAAUO,CAC1B,CAAa,EAIG,CAACE,EAAU,aAAc,CACzB,MAAMC,EAAQ,YAAY,IAAG,EAAKD,EAAU,UACxCC,EAAQ,KACRT,EAAsB,QAAQ,KAC1BU,EAAsBD,CAAK,EAEtC,CACD,OAAOrB,EAAM,KAChB,EAAEe,CAAa,EACjB,CAAC,KAAK,UAAUJ,CAAM,CAAC,CAAC,EAC3BY,EAA0B,IAAM,CAC5B,GAAIT,EAAcJ,CAAM,EACpB,OAAOA,EAAO,GAAG,SAAWO,GAAMjB,EAAM,IAAI,WAAWiB,CAAC,CAAC,CAAC,CAEtE,EAAO,CAACjB,CAAK,CAAC,EACHA,CACX,CCxEA,SAASwB,EAAgBC,EAAUC,EAAOC,EAAe,CACrD,IAAIC,EACJ,GAAI,OAAOH,GAAa,SAAU,CAC9B,IAAII,EAAO,SACPH,IACAI,EAAU,EAAQJ,EAAM,OAAoD,EAC5EG,EAAOH,EAAM,SAEbC,IACCC,EAAKD,EAAcF,CAAQ,KAAO,MAAQG,IAAO,SAAeD,EAAcF,CAAQ,EAAII,EAAK,iBAAiBJ,CAAQ,GACzHA,EAAWE,EAAcF,CAAQ,GAGjCA,EAAWI,EAAK,iBAAiBJ,CAAQ,CAEhD,MACQA,aAAoB,UACzBA,EAAW,CAACA,CAAQ,GAKxB,OAAO,MAAM,KAAKA,GAAY,CAAE,CAAA,CACpC","x_google_ignoreList":[0,1,2]}