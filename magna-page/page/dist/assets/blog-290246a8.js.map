{"version":3,"file":"blog-290246a8.js","sources":["../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","../../src/components/blogCards.tsx","../../src/components/search.tsx","../../src/pages/blog.tsx"],"sourcesContent":["// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior()\n      },\n      notifyOptions\n    );\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const result = super.createResult(query, options);\n    const { isFetching, isRefetching } = result;\n    const isFetchingNextPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"forward\";\n    const isFetchingPreviousPage = isFetching && state.fetchMeta?.fetchMore?.direction === \"backward\";\n    return {\n      ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","import React from 'react';\r\nimport { Result } from '../types/blog';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ninterface BlogListProps {\r\n    blogs: Result[];\r\n    search?: Result[] | null;\r\n}\r\n\r\nconst BlogList: React.FC<BlogListProps> = ({ blogs,search  }) => {\r\n    return (\r\n        <>\r\n        <div className=\"row\">\r\n            {search && search.length === 0 && <h3>No se encontraron resultados</h3>}\r\n            {search && search.length > 0 && <h3>Resultados de la búsqueda</h3>}\r\n            {search &&\r\n                search?.map((blog) => {\r\n                    return (\r\n                        <div key={blog.id} className=\"col-lg-4 col-md-4 col-sm-6 \">\r\n                            \r\n                            <Link to={`/blog/${blog.id}`} className='link-blogs'>\r\n                                <div className=\"card card-blog mt-3 small-card\">\r\n                                    <div className=\"card-img-top\">\r\n                                        <img src={blog.image} className=\"img-fluid small-image\" alt={blog.title} />\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{blog.title}</h5>\r\n                                        <p className=\"card-text\">{blog.description.slice(0, 200)}...</p>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                        \r\n                    );\r\n                })\r\n            }\r\n            {search && search.length > 0 && \r\n            <hr className='mt-5'/>}\r\n            \r\n\r\n        </div>\r\n        <div className=\"row\">\r\n            {blogs.map((blog) => {\r\n    let sizeClass = '';\r\n    let imageClass = '';\r\n    let cardClass = '';\r\n    if (blog.important === false) {\r\n        sizeClass = 'col-lg-4 col-md-4 col-sm-6'; // Primera tarjeta pequeña\r\n        cardClass = 'small-card';\r\n        imageClass = 'small-image';\r\n    } else if (blog.important === true) {\r\n        sizeClass = 'col-lg-6 col-md-12 col-sm-12 '; // Segunda tarjeta 3 veces más grande\r\n        imageClass = 'big-image';\r\n        cardClass = 'big-card';\r\n    } else {\r\n        sizeClass = 'col-lg-3 col-md-4 col-sm-6'; // Resto de tarjetas pequeñas\r\n        imageClass = 'small-image';\r\n        cardClass = 'small-card';\r\n    }\r\n    return (\r\n        <div key={blog.id} className={sizeClass}>\r\n            <Link to={`/blog/${blog.id}`} className='link-blogs'>\r\n                <div className={`card card-blog mt-3 ${cardClass}`}>\r\n                    <div className=\"card-img-top\">\r\n                        <img src={blog.image} className={` img-fluid ${imageClass}`} alt={blog.title} />\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{blog.title}</h5>\r\n                        <p className=\"card-text\">{blog.description.slice(0, 200)}...</p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n})}\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default BlogList;","import React, { useState } from 'react';\nimport { FiSearch } from 'react-icons/fi';\n\ntype SearchProps = {\n    setFilter: (filter: string) => void;\n};\n\nconst Search: React.FC<SearchProps> = ({ setFilter }) => {\n    const [searchValue, setSearchValue] = useState('');\n\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchValue(event.target.value);\n        setFilter(event.target.value);\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={searchValue}\n                onChange={handleSearchChange}\n                placeholder=\"Buscar...\"\n                className='blog-search'\n            />\n            <FiSearch className=\"ms-2\" />\n        </div>\n    );\n};\n\nexport default Search;","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { Spinner } from '../components/spinner';\nimport { useEffect, useState} from 'react';\nimport { Result } from '../types/blog';\nimport { fetchNextBlogs,fetchBlogSearch } from '../api/blog';\nimport \"../pages/styles/blogs.css\"\nimport BlogLayout from '../layouts/blogLayout';\nimport BlogList from '../components/blogCards';\nimport Sidebar from '../components/sidebarBolgs';\nimport BlogSearch from '../components/search';\n\nconst Blog =  () => {\n    const [filter, setFilter] = useState(\"\");\n    const [filterBlogs, setFilterBlogst] = useState<Result[] | null>(null);\n    const { data, isError, isLoading, fetchNextPage,hasNextPage,isFetchingNextPage } = useInfiniteQuery(\n        {\n          queryKey: ['blogs'],\n          queryFn: ({ pageParam = 0 }) => {\n            return fetchNextBlogs(pageParam);\n          },\n          initialPageParam: '1',\n          staleTime: 1000*60*30,refetchOnWindowFocus: false,refetchInterval: 1000*60*30,\n          getNextPageParam: (lastPage) => {\n            console.log(lastPage, 'lastPage');\n            if (lastPage?.nextPage) {\n                console.log(lastPage.nextPage, 'lastPage.nextPage');\n                \n              return lastPage.nextPage.split('=')[1];\n            }\n          },\n        }\n      );\n      useEffect(() => {\n        if (!filter) return;\n        const fetchData = async () => {\n            const response = await fetchBlogSearch(filter);\n            if (!response) return;\n            setFilterBlogst(response);\n        };\n        fetchData();\n    }, [filter]);\n\n      \n    useEffect(() => {\n        if (!data) return;\n        if (data.pages[0] ) {\n            console.log(data.pages[0].blogs, 'data.pages[0].blogs');\n            \n            // setCount(data.pages[0].blogs);\n        }\n    }, []);\n    if (isError) {\n        return <div>Error</div>;\n    }\n    if (isLoading) {\n        return <Spinner />;\n    }\n    console.log(data, 'data');\n    if (!data) {\n        return\n        \n    }\n    const blogs: Result[] = data.pages.flatMap((page) => page?.blogs ?? []);\n    return (\n        <div className='blog-container pt-3'>\n            <BlogLayout> \n                <div className=\"container-fluid\">\n                    <div className=\"blog-header  text-center\">\n                        <h1>MagnaBlog</h1>\n                    </div>\n                    <div className=\" text-center\">\n                        <BlogSearch setFilter={setFilter} />\n                    </div>\n                    <div className=\"blog-cards \">\n                        <div className=\"row\">\n                            <div className=\"col-lg-8 col-12\">\n                                <BlogList blogs={blogs} search={filterBlogs} />\n                            </div>\n                            <div className=\"col-md-4 col-12\">\n                                <Sidebar />\n                            </div>\n                        </div>\n                        <button\n                    onClick={() => fetchNextPage()}\n                    className=\"btn btn-primary\"\n                    type=\"button\"\n                    disabled={!hasNextPage || isFetchingNextPage}\n                    style={{ marginTop: '2rem' }}\n                >\n                    {isFetchingNextPage\n                        ? 'Loading more...'\n                        : hasNextPage\n                        ? 'Cargar más blogs'\n                        : 'No hay más blogs'}\n                </button>\n                    </div>\n                </div>\n            </BlogLayout>\n        </div>\n    );\n};\n\nexport default Blog;\n\n\n    \n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","query","state","result","isFetching","isRefetching","isFetchingNextPage","_b","_a","isFetchingPreviousPage","_d","_c","hasNextPage","hasPreviousPage","useInfiniteQuery","queryClient","useBaseQuery","BlogList","blogs","search","jsxs","Fragment","jsx","blog","Link","sizeClass","imageClass","cardClass","Search","setFilter","searchValue","setSearchValue","useState","handleSearchChange","event","FiSearch","Blog","filter","filterBlogs","setFilterBlogst","data","isError","isLoading","fetchNextPage","pageParam","fetchNextBlogs","lastPage","useEffect","response","fetchBlogSearch","Spinner","page","BlogLayout","BlogSearch","Sidebar"],"mappings":"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","x_google_ignoreList":[0,1]}