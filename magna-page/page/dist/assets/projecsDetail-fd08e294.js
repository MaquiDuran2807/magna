import{p as y,q as E,j as s,S as P,A as N,k as T,l as _,m as S,o as O,r as u,_ as v,n as j,R as x,i as g,h as I,L as w}from"./index-e183d08d.js";import{B as M}from"./banner-9708afb9.js";import{i as R}from"./projects-3211399b.js";import"./index.esm-7087b389.js";import"./iconBase-5a6e9e1a.js";import"./index.esm-8c98af6d.js";function F(d){const{effect:e,swiper:t,on:n,setTranslate:m,setTransition:l,overwriteParams:o,perspective:r,recreateShadows:a,getEffectParams:i}=d;n("beforeInit",()=>{if(t.params.effect!==e)return;t.classNames.push(`${t.params.containerModifierClass}${e}`),r&&r()&&t.classNames.push(`${t.params.containerModifierClass}3d`);const f=o?o():{};Object.assign(t.params,f),Object.assign(t.originalParams,f)}),n("setTranslate",()=>{t.params.effect===e&&m()}),n("setTransition",(f,p)=>{t.params.effect===e&&l(p)}),n("transitionEnd",()=>{if(t.params.effect===e&&a){if(!i||!i().slideShadows)return;t.slides.forEach(f=>{f.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach(p=>p.remove())}),a()}});let c;n("virtualUpdate",()=>{t.params.effect===e&&(t.slides.length||(c=!0),requestAnimationFrame(()=>{c&&t.slides&&t.slides.length&&(m(),c=!1)}))})}function $(d,e){const t=y(e);return t!==e&&(t.style.backfaceVisibility="hidden",t.style["-webkit-backface-visibility"]="hidden"),t}function D(d){let{swiper:e,duration:t,transformElements:n,allSlides:m}=d;const{activeIndex:l}=e,o=r=>r.parentElement?r.parentElement:e.slides.filter(i=>i.shadowRoot&&i.shadowRoot===r.parentNode)[0];if(e.params.virtualTranslate&&t!==0){let r=!1,a;m?a=n:a=n.filter(i=>{const c=i.classList.contains("swiper-slide-transform")?o(i):i;return e.getSlideIndex(c)===l}),a.forEach(i=>{E(i,()=>{if(r||!e||e.destroyed)return;r=!0,e.animating=!1;const c=new window.CustomEvent("transitionend",{bubbles:!0,cancelable:!0});e.wrapperEl.dispatchEvent(c)})})}}function k(d){let{swiper:e,extendParams:t,on:n}=d;t({fadeEffect:{crossFade:!1}}),F({effect:"fade",swiper:e,on:n,setTranslate:()=>{const{slides:o}=e,r=e.params.fadeEffect;for(let a=0;a<o.length;a+=1){const i=e.slides[a];let f=-i.swiperSlideOffset;e.params.virtualTranslate||(f-=e.translate);let p=0;e.isHorizontal()||(p=f,f=0);const b=e.params.fadeEffect.crossFade?Math.max(1-Math.abs(i.progress),0):1+Math.min(Math.max(i.progress,-1),0),h=$(r,i);h.style.opacity=b,h.style.transform=`translate3d(${f}px, ${p}px, 0px)`}},setTransition:o=>{const r=e.slides.map(a=>y(a));r.forEach(a=>{a.style.transitionDuration=`${o}ms`}),D({swiper:e,duration:o,transformElements:r,allSlides:!0})},overwriteParams:()=>({slidesPerView:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!e.params.cssMode})})}const q=({images:d})=>s.jsx(P,{spaceBetween:0,slidesPerView:1,autoplay:{delay:8e3,disableOnInteraction:!1,pauseOnMouseEnter:!0},modules:[N,T,_,k],effect:"fade",className:"projectDetailSlider",children:d.map((e,t)=>s.jsx(S,{style:{height:"100%",width:"100%",backgroundColor:"white"},children:s.jsxs(O.div,{initial:{opacity:0,y:50},transition:{duration:.5},animate:{opacity:1,y:0},children:[s.jsx("img",{src:`${e.imagen}`,alt:`proyecto-${e.proyecto} `,className:"img-fluid imagen-proecto"}),s.jsx("div",{children:s.jsx("a",{href:e.references_url?e.references_url:"https://www.Magnaingenieriaytopografia.com",target:"_blank",rel:"noreferrer",children:e.references_name?e.references_name:"Magnaingenieriaytopografia.com"})})]})},t))});const A=u.lazy(()=>v(()=>import("./proyectos-2ab83351.js"),["assets/proyectos-2ab83351.js","assets/index-e183d08d.js","assets/index-9f47fd08.css","assets/setionHeader-b1264ec8.js","assets/Recurso 1-e9af6898.js","assets/ScreenSize-09bb2cac.js","assets/useLazyload-11af7c3a.js","assets/proyectos-42af8fd5.css"])),L=u.lazy(()=>v(()=>import("./cardsProjects-fd65a5ad.js"),["assets/cardsProjects-fd65a5ad.js","assets/index-e183d08d.js","assets/index-9f47fd08.css","assets/useLazyload-11af7c3a.js","assets/cardsProjects-577b53fd.css"])),W=()=>{const d=j();console.log(d,"parametros");const[e,t]=x.useState(),[n,m]=x.useState([]),{projectArg:l}=j();console.log(l,"id");const{data:o}=g({queryKey:["projects"],staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchOnMount:!1,refetchOnReconnect:!1,refetchInterval:1e3*60*30}),{data:r}=g({queryKey:["projectsImages"],staleTime:1e3*60*30,refetchOnWindowFocus:!1,refetchOnMount:!1,refetchOnReconnect:!1,refetchInterval:1e3*60*30});return!o||!r||!l?s.jsx("div",{children:"no hay "}):(u.useEffect(()=>{const a=o.results.find(c=>c.id===parseInt(l))||null,i=r.filter(c=>c.proyecto===parseInt(l));console.log(a,"aqui estoy en project_select",i,"images"),a&&(t(a),m(i))},[o,r,l]),!e||!n?null:s.jsx(s.Fragment,{children:s.jsxs(I,{children:[s.jsx(M,{title:"Proyectos",paragraph:"Proyectos",image:R}),s.jsxs("div",{className:"container-fluid",children:[s.jsxs("div",{className:"row titulo",children:[s.jsx("h2",{className:"col-10",children:e.nombre}),s.jsx(w,{to:"/projects",className:"col-2",children:s.jsx("button",{className:"boton-1 ",children:"ver m치s"})})]}),s.jsxs("div",{className:"row project-detail",children:[s.jsx("div",{className:"col-12 col-md-6 ",children:s.jsx(q,{images:n})}),s.jsxs("div",{className:"col-12 col-md-6",children:[s.jsx("br",{}),s.jsx("br",{}),s.jsx("h3",{children:"Descripci칩n del proyecto"}),s.jsx("p",{children:e.descripcion}),s.jsx("h3",{children:"Ubicaci칩n"}),s.jsxs("p",{children:[e.ciudad.departamento.pais.nombre,", ",e.ciudad.departamento.nombre,", ",e.ciudad.nombre]}),s.jsx("h3",{children:"Servicios prestados"}),e.servicios.map(a=>s.jsxs(s.Fragment,{children:[s.jsx("h5",{children:a.nombre},a.id),s.jsx(w,{to:"/servicios",children:s.jsx("button",{className:"boton-1",children:"ver m치s"})})]}))]},l)]}),s.jsx("div",{className:"row",children:s.jsx("div",{className:"col-12 relacionados",children:s.jsx("h3",{children:"Proyectos relacionados"})})}),s.jsx("div",{className:"row",children:s.jsx("div",{className:"col-12",children:s.jsx(L,{type:e.tipo.id,actualPage:e.id,imagenes:r})})}),s.jsx("div",{className:"row",children:s.jsx("div",{className:"col-12",children:s.jsx(A,{})})})]})]})}))};export{W as default};


//# sourceMappingURL=data:application/json;base64,