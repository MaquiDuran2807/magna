import{p as g,q as y,j as e,S as b,A as E,i as P,k as N,l as _,o as S,r as h,_ as w,R as j,m as T,h as I,L as x}from"./index.js";import{B as M}from"./banner-974c4441.js";import{i as O}from"./projects-cc0203f0.js";import{u as $}from"./getProjects-1bbe493c.js";import"./index.esm-552fc115.js";import"./iconBase-24917912.js";import"./index.esm-84b527cb.js";function D(i){const{effect:s,swiper:t,on:c,setTranslate:l,setTransition:d,overwriteParams:o,perspective:r,recreateShadows:n,getEffectParams:a}=i;c("beforeInit",()=>{if(t.params.effect!==s)return;t.classNames.push(`${t.params.containerModifierClass}${s}`),r&&r()&&t.classNames.push(`${t.params.containerModifierClass}3d`);const f=o?o():{};Object.assign(t.params,f),Object.assign(t.originalParams,f)}),c("setTranslate",()=>{t.params.effect===s&&l()}),c("setTransition",(f,p)=>{t.params.effect===s&&d(p)}),c("transitionEnd",()=>{if(t.params.effect===s&&n){if(!a||!a().slideShadows)return;t.slides.forEach(f=>{f.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach(p=>p.remove())}),n()}});let m;c("virtualUpdate",()=>{t.params.effect===s&&(t.slides.length||(m=!0),requestAnimationFrame(()=>{m&&t.slides&&t.slides.length&&(l(),m=!1)}))})}function R(i,s){const t=g(s);return t!==s&&(t.style.backfaceVisibility="hidden",t.style["-webkit-backface-visibility"]="hidden"),t}function k(i){let{swiper:s,duration:t,transformElements:c,allSlides:l}=i;const{activeIndex:d}=s,o=r=>r.parentElement?r.parentElement:s.slides.filter(a=>a.shadowRoot&&a.shadowRoot===r.parentNode)[0];if(s.params.virtualTranslate&&t!==0){let r=!1,n;l?n=c:n=c.filter(a=>{const m=a.classList.contains("swiper-slide-transform")?o(a):a;return s.getSlideIndex(m)===d}),n.forEach(a=>{y(a,()=>{if(r||!s||s.destroyed)return;r=!0,s.animating=!1;const m=new window.CustomEvent("transitionend",{bubbles:!0,cancelable:!0});s.wrapperEl.dispatchEvent(m)})})}}function A(i){let{swiper:s,extendParams:t,on:c}=i;t({fadeEffect:{crossFade:!1}}),D({effect:"fade",swiper:s,on:c,setTranslate:()=>{const{slides:o}=s,r=s.params.fadeEffect;for(let n=0;n<o.length;n+=1){const a=s.slides[n];let f=-a.swiperSlideOffset;s.params.virtualTranslate||(f-=s.translate);let p=0;s.isHorizontal()||(p=f,f=0);const v=s.params.fadeEffect.crossFade?Math.max(1-Math.abs(a.progress),0):1+Math.min(Math.max(a.progress,-1),0),u=R(r,a);u.style.opacity=v,u.style.transform=`translate3d(${f}px, ${p}px, 0px)`}},setTransition:o=>{const r=s.slides.map(n=>g(n));r.forEach(n=>{n.style.transitionDuration=`${o}ms`}),k({swiper:s,duration:o,transformElements:r,allSlides:!0})},overwriteParams:()=>({slidesPerView:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!s.params.cssMode})})}const F=({images:i})=>e.jsx(b,{spaceBetween:0,slidesPerView:1,autoplay:{delay:8e3,disableOnInteraction:!1,pauseOnMouseEnter:!0},modules:[E,P,N,A],effect:"fade",className:"projectDetailSlider",children:i.map((s,t)=>e.jsx(_,{style:{height:"100%",width:"100%",backgroundColor:"white"},children:e.jsxs(S.div,{initial:{opacity:0,y:50},transition:{duration:.5},animate:{opacity:1,y:0},children:[e.jsx("img",{src:`${s.imagen}`,alt:`proyecto-${s.proyecto} `,className:"img-fluid imagen-proecto"}),e.jsx("div",{children:e.jsx("a",{href:s.references_url?s.references_url:"https://www.Magnaingenieriaytopografia.com",target:"_blank",rel:"noreferrer",children:s.references_name?s.references_name:"Magnaingenieriaytopografia.com"})})]})},t))});const L=h.lazy(()=>w(()=>import("./proyectos-ec00fb51.js"),["proyectos-ec00fb51.js","index.js","index-5a9f3c56.css","setionHeader-01dc1b94.js","Recurso 1-89d2e2b4.js","ScreenSize-d22b7a5d.js","useLazyload-3251c952.js","proyectos-87458a40.css"])),V=h.lazy(()=>w(()=>import("./cardsProjects-3f022353.js"),["cardsProjects-3f022353.js","index.js","index-5a9f3c56.css","useLazyload-3251c952.js","cardsProjects-577b53fd.css"])),J=()=>{const[i,s]=j.useState(),[t,c]=j.useState([]),{projectArg:l}=T(),{projects:d,projectImages:o}=$();return h.useEffect(()=>{if(!d||!o||!l)return;const r=d.results.find(a=>a.id===parseInt(l)),n=o.filter(a=>a.proyecto===parseInt(l));r&&(s(r),c(n))},[d,o,l]),!i||!t||!d||!o||!l?e.jsx("div",{children:"No hay información disponible"}):e.jsx(e.Fragment,{children:e.jsxs(I,{children:[e.jsx(M,{title:"Proyectos",paragraph:"Proyectos",image:O}),e.jsxs("div",{className:"container-fluid",children:[e.jsxs("div",{className:"row titulo",children:[e.jsx("h2",{className:"col-10",children:i.nombre}),e.jsx(x,{to:"/projects",className:"col-2",children:e.jsx("button",{className:"boton-1 ",children:"ver más"})})]}),e.jsxs("div",{className:"row project-detail",children:[e.jsx("div",{className:"col-12 col-md-6 ",children:e.jsx(F,{images:t})}),e.jsxs("div",{className:"col-12 col-md-6",children:[e.jsx("br",{}),e.jsx("br",{}),e.jsx("h3",{children:"Descripción del proyecto"}),e.jsx("p",{children:i.descripcion}),e.jsx("h3",{children:"Ubicación"}),e.jsxs("p",{children:[i.ciudad.departamento.pais.nombre,", ",i.ciudad.departamento.nombre,", ",i.ciudad.nombre]}),e.jsx("h3",{children:"Servicios prestados"}),i.servicios.map(r=>e.jsxs(e.Fragment,{children:[e.jsx("h5",{children:r.nombre},r.id),e.jsx(x,{to:"/servicios",children:e.jsx("button",{className:"boton-1",children:"ver más"})})]}))]},l)]}),e.jsx("div",{className:"row",children:e.jsx("div",{className:"col-12 relacionados",children:e.jsx("h3",{children:"Proyectos relacionados"})})}),e.jsx("div",{className:"row",children:e.jsx("div",{className:"col-12",children:e.jsx(V,{type:i.tipo.id,actualPage:i.id,imagenes:o,projects:d})})}),e.jsx("div",{className:"row",children:e.jsx("div",{className:"col-12",children:e.jsx(L,{})})})]})]})})};export{J as default};


//# sourceMappingURL=data:application/json;base64,