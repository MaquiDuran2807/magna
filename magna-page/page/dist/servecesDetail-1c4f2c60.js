import{j as e,r,_ as D}from"./jsx-runtime-6ef19e59.js";import{A as z,a as O}from"./index.esm-4586649c.js";import{s as R,t as I,i as L,m as B}from"./converted_topo-f5fbb5b6.js";import{B as M}from"./banner-4c654777.js";import{S as T,A as V,P as $,N as k,a as F}from"./autoplay-58d4bfb8.js";/* empty css                  */import{u as G}from"./ScreenSize-0f59a4ff.js";import{P as Y,m as x}from"./pagesLayouts-b2166cdd.js";import{S as q}from"./main.js";import{u as H}from"./useLazyload-689b34b0.js";import{u as J}from"./getInfoPage-fd58e6da.js";import{u as K}from"./index-f8d2074a.js";import{A as Q}from"./index-3beeaf27.js";import"./iconBase-407194bc.js";import"./index.esm-3dfe3349.js";import"./index.esm-62be572a.js";import"./index-ab0b2909.js";import"./utils-210feaca.js";import"./apiClient-4214bebe.js";import"./useQuery-5396bbc9.js";const U=({subServicios:t,subtitle:l})=>e.jsx(T,{spaceBetween:30,slidesPerView:1,autoplay:{delay:5e3,disableOnInteraction:!1,pauseOnMouseEnter:!0},navigation:!0,modules:[V,$,k],children:t==null?void 0:t.map((n,d)=>e.jsxs(F,{children:[e.jsx("div",{className:"slide-service ",children:e.jsx("img",{srcSet:`
                            ${n.imagen_celular} 450w,
                            ${n.imagen_tablet} 1024w,
                            ${n.imagen} 5000w
                        `,sizes:`(max-width: 450px) 280px,
                            (max-width: 1023px) 736px,
                            (min-width: 1024px) 1024px`,alt:n.nombre,className:"img-fluid img-subservicio "})}),e.jsx("h3",{className:"title-slider-service",children:l?n.nombre:""})]},d))});const b=r.lazy(()=>D(()=>import("./Servicios-b81a8580.js"),["Servicios-b81a8580.js","jsx-runtime-6ef19e59.js","useQuery-5396bbc9.js","utils-210feaca.js","setionHeader-7441b4b0.js","pagesLayouts-b2166cdd.js","index-f8d2074a.js","index-ab0b2909.js","useLazyload-689b34b0.js","Servicios-7ee61343.css"])),W=()=>{var N,w;const{id:t}=K();let[l,n]=r.useState("Nuestros Servicios"),[d,m]=r.useState(R);const{services:o}=J();let h="container";const[c,f]=r.useState(),[a,j]=r.useState(null),[y,p]=r.useState(null),[_,v]=r.useState(!0),g=i=>{if(!o)return;const s=o.filter(C=>C.nombre===i);return p(s[0].subservicios),s};r.useEffect(()=>{if(o)if(t){const i=g(t);if(i){const s="servicios de "+i[0].nombre;n(s),f(i),i[0].nombre==="Topografía"&&m(I),i[0].nombre==="Ingeniería y Consultoría"&&m(L),i[0].nombre==="Medio Ambiente"&&m(B)}}else{f(o),n("Nuestros Servicios");const i=o.flatMap(s=>s.subservicios);p(i)}},[o,t]);const{width:S,height:P}=G();console.log(S,P);const A=S<=1e3,u=r.useRef(null);A&&(h="mobile");const E=async i=>{if(!i)return;const s=[];s.push(i),j(s),v(!1),s&&(p(s),t&&setTimeout(()=>{j(null),v(!0),o&&g(t)},2e4))};return r.useEffect(()=>{if(u.current&&a){const i=u.current.getBoundingClientRect().top+window.pageYOffset,s=-300;window.scroll({top:i+s,behavior:"smooth"})}},[a]),c?e.jsx(e.Fragment,{children:e.jsxs(Y,{children:[e.jsx(M,{title:c.length==1?c[0].nombre:"Servicios",paragraph:l.toString(),image:d}),e.jsxs("div",{className:h,children:[e.jsx("div",{className:"row servicio",children:c.length===1?e.jsx("div",{className:"col-12",children:e.jsx("h2",{className:"text-center",children:l})}):e.jsx("div",{className:"row",children:e.jsx(b,{})})}),e.jsxs("div",{className:"row content",children:[e.jsx("div",{className:"col-12 col-md-4 ",children:e.jsx("div",{className:"aside -template",children:c.map(i=>e.jsx("div",{children:e.jsxs("div",{className:"row px-2",children:[e.jsx("div",{className:"col-12",children:e.jsxs(x.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:.6},className:"servicio",children:[e.jsx("h3",{children:i==null?void 0:i.nombre}),e.jsx("p",{className:"px-2",children:i==null?void 0:i.descripcion})]},i.id)}),e.jsx("div",{children:i.subservicios.map(s=>e.jsx("div",{className:"row",children:e.jsx("div",{className:"col-12",children:e.jsx(x.div,{onClick:()=>E(s),initial:{opacity:0},animate:{opacity:1},transition:{duration:.3},className:"subservicio",children:e.jsxs("div",{className:"row items mx-3",children:[e.jsx("span",{className:"col-1 icon-row",children:e.jsx(z,{})}),e.jsxs("h5",{className:"col-10",children:[s.nombre+"   ",e.jsx("span",{children:e.jsx(O,{})})]})]})},s.id)})},s.id))})]})},i.id))})}),e.jsxs("div",{className:"col-12 col-md-8 ",children:[e.jsx("div",{className:"row mb-5",children:e.jsx(U,{subServicios:y,subtitle:_})}),e.jsxs("div",{className:"row",ref:u,children:[e.jsx(Q,{children:e.jsxs(x.div,{initial:{height:0,opacity:0},animate:{height:"auto",opacity:1},exit:{height:0,opacity:0,scale:.5},transition:{duration:.3,delay:1,delayChildren:.3,staggerChildren:.3},children:[e.jsx("h3",{children:a?a[0].nombre:"Servicios de calidad y con la más alta tecnología"}),e.jsx("p",{children:a?a[0].descripcion:"Somos una empresa con más de 10 años de experiencia en el mercado, con profesionales altamente calificados y con amplia experiencia en el sector público y privado, brindando servicios de calidad y con la más alta tecnología."})]},a&&((N=a[0])==null?void 0:N.id))}),e.jsx("div",{})]},a&&((w=a[0])==null?void 0:w.descripcion))]}),c.length===1?e.jsx("div",{className:"row",children:e.jsx(b,{})}):""]})]})]})}):e.jsx(q,{})};function ve(){const{isVisible:t,ref:l}=H("100px");return e.jsx("div",{id:"LazyServecesDetail",ref:l,children:t?e.jsx(W,{}):null})}export{ve as default};


//# sourceMappingURL=data:application/json;base64,